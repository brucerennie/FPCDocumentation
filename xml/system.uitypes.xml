<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <!--
  This file is part of the FPC documentation.
  Copyright (C) 1997, by MichaÃ«l Van Canneyt.

  The FPC documentation is free text; you can redistribute it and/or modify it
  under the terms of the GNU Library General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at your
  option) any later version. The FPC Documentation is distributed in the hope
  that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Library General Public License for more details. You should have received
  a copy of the GNU Library General Public License along with the FPC
  documentation; see the file COPYING.LIB. If not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  -->
  <!-- rtl.system.uitypes -->
  <package name="rtl">
    <module name="system.uitypes">
      <short>
        Delphi compatibility unit with GUI and image-related types.
      </short>
      <descr>
        <p>
          The <var>System.UITypes</var> unit contains UI (User Interface) 
          related types: colors, cursor shapes, modal dialog results. These 
          types have been isolated so they can be used in programs that need 
          them without the need for including a specific UI framework.
        </p>
      </descr>

      <element name="TColor">
        <short>
          Cardinal range type used to represent color values.
        </short>
        <descr>
          <p>
            TColor is a Cardinal type used to represent color values, and must
            be in the range -$7FFFFFFF-1..$7FFFFFFF. Each of the bytes in the
            Cardinal value represent a color component like Red, Green,
            and Blue.
          </p>
          <p>
            For example:
          </p>
          <ul>
            <li>
              Red has the value $FF0000.
            </li>
            <li>
              Green has the value $008000.
            </li>
            <li>
              Blue has the value $0000FF.
            </li>
          </ul>
          <p>
            The high order byte in the Cardinal value is reserved for use as
            the Alpha channel (transparency), with the high order bit reserved
            for use by the platform or operating system. TColor values do not
            use the remaining bits in the the Alpha channel component.
          </p>
          <p>
            Use TColorRec to access constants with common names for the TColor
            values.
          </p>
        </descr>
        <seealso>
          <link id="TColorRec"/>
          <link id="TColorRef"/>
          <link id="PColor"/>
        </seealso>
      </element>

      <element name="PColor">
        <short>
          Pointer to a TColor type.
        </short>
        <descr/>
        <seealso>
          <link id="TColor"/>
          <link id="TColorRec"/>
          <link id="TColorRef"/>
        </seealso>
      </element>

      <element name="TColorRef">
        <short>
          Provides access to the value for a color as a Cardinal type.
        </short>
        <descr/>
        <seealso>
          <link id="TColor"/>
          <link id="TColorRec"/>
          <link id="PColor"/>
          <link id="PColorRef"/>
        </seealso>
      </element>

      <element name="PColorRef">
        <short>
          Pointer to a TColorRef type.
        </short>
        <descr/>
        <seealso>
          <link id="TColorRef"/>
          <link id="TColor"/>
        </seealso>
      </element>

      <element name="TAlphaColor">
        <short>
          Represents an RGB color value with an Alpha channel.
        </short>
        <descr>
          <p>
            TAlphaColor is the type used to represent an Alpha Color (a color 
            value with an alpha channel). TAlphaColor is an alias to the 
            Cardinal type and is composed of four hexadecimal byte values used 
            to represent an ARGB color. For example:
          </p>
          <table>
            <tr>
            <td><b>Color</b></td>
            <td><b>TAlphaColor value</b></td>
            </tr>
            <tr>
            <td>Red</td>
            <td>TAlphaColor($ffff0000);</td>
            </tr>
            <tr>
            <td>Green</td>
            <td>TAlphaColor($ff008000);</td>
            </tr>
            <tr>
            <td>Blue</td>
            <td>TAlphaColor($ff0000ff);</td>
            </tr>
            <tr>
            <td>Black</td>
            <td>TAlphaColor($ff000000);</td>
            </tr>
            <tr>
            <td>White</td>
            <td>TAlphaColor($ffffffff);</td>
            </tr>
            <tr>
            <td>Null</td>
            <td>TAlphaColor($00000000);</td>
            </tr>
          </table>
          <p>
            The high-order byte is the Alpha channel and indicates the opacity 
            for the color value represented in the RGB component values. $FF in 
            the A component is fully opaque. $00 is fully transparent.
          </p>
          <p>
            The byte values used for R, G, and B indicate the intensities for 
            the respective colors. $FF is full intensity (opaque), and $00 is 
            no intensity (transparent).
          </p>
          <p>
            Use TAlphaColors (or TAlphaColorRec) to access Alpha color values 
            using predefined name constants like Red, Green, Blue, LimeGreen or 
            CornflowerBlue. It can also be used to access the individual ARGB 
            byte values in an Alpha color in the record instance.
          </p>
          <p>
            See TColor for color values using RGB component values.
          </p>
        </descr>
        <seealso>
          <link id="TAlphaColors"/>
          <link id="TAlphaColorRec"/>
          <link id="TColor"/>
          <link id="TColorRec"/>
        </seealso>
      </element>

      <element name="PAlphaColor">
        <short>
          Pointer to a TAlphaColor type.
        </short>
        <descr/>
        <seealso>
          <link id="TAlphaColor"/>
        </seealso>
      </element>

      <element name="TColorRec">
        <short>
          Record type used to access color names and values.
        </short>
        <descr>
          <p>
            TColorRec is a variant record type.
          </p>
          <p>
            TColorRec includes constants representing common color names,
            including:
          </p>
          <ul>
            <li>
              HTML color names (140).
            </li>
            <li>
              Extended color names (as used in the Lazarus graphic unit).
            </li>
            <li>
              Color aliases for LtGray (like clSilver) and DkGray (like clGray).
            </li>
            <li>
              Color names for Windows system colors.
            </li>    
          </ul>
          <p>
            <b>HTML Colors</b>
          </p>
          <table>
            <tr>
              <td><b>Color Name</b></td>
              <td><b>TColor Value</b></td>
            </tr>
            <tr>
            <td>AliceBlue</td>
            <td>TColor($FFF8F0);</td>
            </tr>
            <tr>
            <td>AntiqueWhite</td>
            <td>TColor($D7EBFA);</td>
            </tr>
            <tr>
            <td>Aqua</td>
            <td>TColor($FFFF00);</td>
            </tr>
            <tr>
            <td>Aquamarine</td>
            <td>TColor($D4FF7F);</td>
            </tr>
            <tr>
            <td>Azure</td>
            <td>TColor($FFFFF0);</td>
            </tr>
            <tr>
            <td>Beige</td>
            <td>TColor($DCF5F5);</td>
            </tr>
            <tr>
            <td>Bisque</td>
            <td>TColor($C4E4FF);</td>
            </tr>
            <tr>
            <td>Black</td>
            <td>TColor($000000);</td>
            </tr>
            <tr>
            <td>BlanchedAlmond</td>
            <td>TColor($CDEBFF);</td>
            </tr>
            <tr>
            <td>Blue</td>
            <td>TColor($FF0000);</td>
            </tr>
            <tr>
            <td>BlueViolet</td>
            <td>TColor($E22B8A);</td>
            </tr>
            <tr>
            <td>Brown</td>
            <td>TColor($2A2AA5);</td>
            </tr>
            <tr>
            <td>BurlyWood</td>
            <td>TColor($87B8DE);</td>
            </tr>
            <tr>
            <td>CadetBlue</td>
            <td>TColor($A09E5F);</td>
            </tr>
            <tr>
            <td>Chartreuse</td>
            <td>TColor($00FF7F);</td>
            </tr>
            <tr>
            <td>Chocolate</td>
            <td>TColor($1E69D2);</td>
            </tr>
            <tr>
            <td>Coral</td>
            <td>TColor($507FFF);</td>
            </tr>
            <tr>
            <td>CornflowerBlue</td>
            <td>TColor($ED9564);</td>
            </tr>
            <tr>
            <td>Cornsilk</td>
            <td>TColor($DCF8FF);</td>
            </tr>
            <tr>
            <td>Crimson</td>
            <td>TColor($3C14DC);</td>
            </tr>
            <tr>
            <td>Cyan</td>
            <td>TColor($FFFF00);</td>
            </tr>
            <tr>
            <td>DarkBlue</td>
            <td>TColor($8B0000);</td>
            </tr>
            <tr>
            <td>DarkCyan</td>
            <td>TColor($8B8B00);</td>
            </tr>
            <tr>
            <td>DarkGoldenRod</td>
            <td>TColor($0B86B8);</td>
            </tr>
            <tr>
            <td>DarkGray</td>
            <td>TColor($A9A9A9);</td>
            </tr>
            <tr>
            <td>DarkGreen</td>
            <td>TColor($006400);</td>
            </tr>
            <tr>
            <td>DarkGrey</td>
            <td>TColor($A9A9A9);</td>
            </tr>
            <tr>
            <td>DarkKhaki</td>
            <td>TColor($6BB7BD);</td>
            </tr>
            <tr>
            <td>DarkMagenta</td>
            <td>TColor($8B008B);</td>
            </tr>
            <tr>
            <td>DarkOliveGreen</td>
            <td>TColor($2F6B55);</td>
            </tr>
            <tr>
            <td>DarkOrange</td>
            <td>TColor($008CFF);</td>
            </tr>
            <tr>
            <td>DarkOrchid</td>
            <td>TColor($CC3299);</td>
            </tr>
            <tr>
            <td>DarkRed</td>
            <td>TColor($00008B);</td>
            </tr>
            <tr>
            <td>DarkSalmon</td>
            <td>TColor($7A96E9);</td>
            </tr>
            <tr>
            <td>DarkSeaGreen</td>
            <td>TColor($8FBC8F);</td>
            </tr>
            <tr>
            <td>DarkSlateBlue</td>
            <td>TColor($8B3D48);</td>
            </tr>
            <tr>
            <td>DarkSlateGray</td>
            <td>TColor($4F4F2F);</td>
            </tr>
            <tr>
            <td>DarkSlateGrey</td>
            <td>TColor($4F4F2F);</td>
            </tr>
            <tr>
            <td>DarkTurquoise</td>
            <td>TColor($D1CE00);</td>
            </tr>
            <tr>
            <td>DarkViolet</td>
            <td>TColor($D30094);</td>
            </tr>
            <tr>
            <td>DeepPink</td>
            <td>TColor($9314FF);</td>
            </tr>
            <tr>
            <td>DeepSkyBlue</td>
            <td>TColor($FFBF00);</td>
            </tr>
            <tr>
            <td>DimGray</td>
            <td>TColor($696969);</td>
            </tr>
            <tr>
            <td>DimGrey</td>
            <td>TColor($696969);</td>
            </tr>
            <tr>
            <td>DodgerBlue</td>
            <td>TColor($FF901E);</td>
            </tr>
            <tr>
            <td>FireBrick</td>
            <td>TColor($2222B2);</td>
            </tr>
            <tr>
            <td>FloralWhite</td>
            <td>TColor($F0FAFF);</td>
            </tr>
            <tr>
            <td>ForestGreen</td>
            <td>TColor($228B22);</td>
            </tr>
            <tr>
            <td>Fuchsia</td>
            <td>TColor($FF00FF);</td>
            </tr>
            <tr>
            <td>Gainsboro</td>
            <td>TColor($DCDCDC);</td>
            </tr>
            <tr>
            <td>GhostWhite</td>
            <td>TColor($FFF8F8);</td>
            </tr>
            <tr>
            <td>Gold</td>
            <td>TColor($00D7FF);</td>
            </tr>
            <tr>
            <td>GoldenRod</td>
            <td>TColor($20A5DA);</td>
            </tr>
            <tr>
            <td>Gray</td>
            <td>TColor($808080);</td>
            </tr>
            <tr>
            <td>Green</td>
            <td>TColor($008000);</td>
            </tr>
            <tr>
            <td>GreenYellow</td>
            <td>TColor($2FFFAD);</td>
            </tr>
            <tr>
            <td>Grey</td>
            <td>TColor($808080);</td>
            </tr>
            <tr>
            <td>HoneyDew</td>
            <td>TColor($F0FFF0);</td>
            </tr>
            <tr>
            <td>HotPink</td>
            <td>TColor($B469FF);</td>
            </tr>
            <tr>
            <td>IndianRed</td>
            <td>TColor($5C5CCD);</td>
            </tr>
            <tr>
            <td>Indigo</td>
            <td>TColor($82004B);</td>
            </tr>
            <tr>
            <td>Ivory</td>
            <td>TColor($F0FFFF);</td>
            </tr>
            <tr>
            <td>Khaki</td>
            <td>TColor($8CE6F0);</td>
            </tr>
            <tr>
            <td>Lavender</td>
            <td>TColor($FAE6E6);</td>
            </tr>
            <tr>
            <td>LavenderBlush</td>
            <td>TColor($F5F0FF);</td>
            </tr>
            <tr>
            <td>LawnGreen</td>
            <td>TColor($00FC7C);</td>
            </tr>
            <tr>
            <td>LemonChiffon</td>
            <td>TColor($CDFAFF);</td>
            </tr>
            <tr>
            <td>LightBlue</td>
            <td>TColor($E6D8AD);</td>
            </tr>
            <tr>
            <td>LightCoral</td>
            <td>TColor($8080F0);</td>
            </tr>
            <tr>
            <td>LightCyan</td>
            <td>TColor($FFFFE0);</td>
            </tr>
            <tr>
            <td>LightGoldenRodYellow</td>
            <td>TColor($D2FAFA);</td>
            </tr>
            <tr>
            <td>LightGray</td>
            <td>TColor($D3D3D3);</td>
            </tr>
            <tr>
            <td>LightGreen</td>
            <td>TColor($90EE90);</td>
            </tr>
            <tr>
            <td>LightGrey</td>
            <td>TColor($D3D3D3);</td>
            </tr>
            <tr>
            <td>LightPink</td>
            <td>TColor($C1B6FF);</td>
            </tr>
            <tr>
            <td>LightSalmon</td>
            <td>TColor($7AA0FF);</td>
            </tr>
            <tr>
            <td>LightSeaGreen</td>
            <td>TColor($AAB220);</td>
            </tr>
            <tr>
            <td>LightSkyBlue</td>
            <td>TColor($FACE87);</td>
            </tr>
            <tr>
            <td>LightSlateGray</td>
            <td>TColor($998877);</td>
            </tr>
            <tr>
            <td>LightSlateGrey</td>
            <td>TColor($998877);</td>
            </tr>
            <tr>
            <td>LightSteelBlue</td>
            <td>TColor($DEC4B0);</td>
            </tr>
            <tr>
            <td>LightYellow</td>
            <td>TColor($E0FFFF);</td>
            </tr>
            <tr>
            <td>Lime</td>
            <td>TColor($00FF00);</td>
            </tr>
            <tr>
            <td>LimeGreen</td>
            <td>TColor($32CD32);</td>
            </tr>
            <tr>
            <td>Linen</td>
            <td>TColor($E6F0FA);</td>
            </tr>
            <tr>
            <td>Magenta</td>
            <td>TColor($FF00FF);</td>
            </tr>
            <tr>
            <td>Maroon</td>
            <td>TColor($000080);</td>
            </tr>
            <tr>
            <td>MediumAquaMarine</td>
            <td>TColor($AACD66);</td>
            </tr>
            <tr>
            <td>MediumBlue</td>
            <td>TColor($CD0000);</td>
            </tr>
            <tr>
            <td>MediumOrchid</td>
            <td>TColor($D355BA);</td>
            </tr>
            <tr>
            <td>MediumPurple</td>
            <td>TColor($DB7093);</td>
            </tr>
            <tr>
            <td>MediumSeaGreen</td>
            <td>TColor($71B33C);</td>
            </tr>
            <tr>
            <td>MediumSlateBlue</td>
            <td>TColor($EE687B);</td>
            </tr>
            <tr>
            <td>MediumSpringGreen</td>
            <td>TColor($9AFA00);</td>
            </tr>
            <tr>
            <td>MediumTurquoise</td>
            <td>TColor($CCD148);</td>
            </tr>
            <tr>
            <td>MediumVioletRed</td>
            <td>TColor($8515C7);</td>
            </tr>
            <tr>
            <td>MidnightBlue</td>
            <td>TColor($701919);</td>
            </tr>
            <tr>
            <td>MintCream</td>
            <td>TColor($FAFFF5);</td>
            </tr>
            <tr>
            <td>MistyRose</td>
            <td>TColor($E1E4FF);</td>
            </tr>
            <tr>
            <td>Moccasin</td>
            <td>TColor($B5E4FF);</td>
            </tr>
            <tr>
            <td>NavajoWhite</td>
            <td>TColor($ADDEFF);</td>
            </tr>
            <tr>
            <td>Navy</td>
            <td>TColor($800000);</td>
            </tr>
            <tr>
            <td>OldLace</td>
            <td>TColor($E6F5FD);</td>
            </tr>
            <tr>
            <td>Olive</td>
            <td>TColor($008080);</td>
            </tr>
            <tr>
            <td>OliveDrab</td>
            <td>TColor($238E6B);</td>
            </tr>
            <tr>
            <td>Orange</td>
            <td>TColor($00A5FF);</td>
            </tr>
            <tr>
            <td>OrangeRed</td>
            <td>TColor($0045FF);</td>
            </tr>
            <tr>
            <td>Orchid</td>
            <td>TColor($D670DA);</td>
            </tr>
            <tr>
            <td>PaleGoldenRod</td>
            <td>TColor($AAE8EE);</td>
            </tr>
            <tr>
            <td>PaleGreen</td>
            <td>TColor($98FB98);</td>
            </tr>
            <tr>
            <td>PaleTurquoise</td>
            <td>TColor($EEEEAF);</td>
            </tr>
            <tr>
            <td>PaleVioletRed</td>
            <td>TColor($9370DB);</td>
            </tr>
            <tr>
            <td>PapayaWhip</td>
            <td>TColor($D5EFFF);</td>
            </tr>
            <tr>
            <td>PeachPuff</td>
            <td>TColor($B9DAFF);</td>
            </tr>
            <tr>
            <td>Peru</td>
            <td>TColor($3F85CD);</td>
            </tr>
            <tr>
            <td>Pink</td>
            <td>TColor($CBC0FF);</td>
            </tr>
            <tr>
            <td>Plum</td>
            <td>TColor($DDA0DD);</td>
            </tr>
            <tr>
            <td>PowderBlue</td>
            <td>TColor($E6E0B0);</td>
            </tr>
            <tr>
            <td>Purple</td>
            <td>TColor($800080);</td>
            </tr>
            <tr>
            <td>RebeccaPurple</td>
            <td>TColor($993366);</td>
            </tr>
            <tr>
            <td>Red</td>
            <td>TColor($0000FF);</td>
            </tr>
            <tr>
            <td>RosyBrown</td>
            <td>TColor($8F8FBC);</td>
            </tr>
            <tr>
            <td>RoyalBlue</td>
            <td>TColor($E16941);</td>
            </tr>
            <tr>
            <td>SaddleBrown</td>
            <td>TColor($13458B);</td>
            </tr>
            <tr>
            <td>Salmon</td>
            <td>TColor($7280FA);</td>
            </tr>
            <tr>
            <td>SandyBrown</td>
            <td>TColor($60A4F4);</td>
            </tr>
            <tr>
            <td>SeaGreen</td>
            <td>TColor($578B2E);</td>
            </tr>
            <tr>
            <td>SeaShell</td>
            <td>TColor($EEF5FF);</td>
            </tr>
            <tr>
            <td>Sienna</td>
            <td>TColor($2D52A0);</td>
            </tr>
            <tr>
            <td>Silver</td>
            <td>TColor($C0C0C0);</td>
            </tr>
            <tr>
            <td>SkyBlue</td>
            <td>TColor($EBCE87);</td>
            </tr>
            <tr>
            <td>SlateBlue</td>
            <td>TColor($CD5A6A);</td>
            </tr>
            <tr>
            <td>SlateGray</td>
            <td>TColor($908070);</td>
            </tr>
            <tr>
            <td>SlateGrey</td>
            <td>TColor($908070);</td>
            </tr>
            <tr>
            <td>Snow</td>
            <td>TColor($FAFAFF);</td>
            </tr>
            <tr>
            <td>SpringGreen</td>
            <td>TColor($7FFF00);</td>
            </tr>
            <tr>
            <td>SteelBlue</td>
            <td>TColor($B48246);</td>
            </tr>
            <tr>
            <td>Tan</td>
            <td>TColor($8CB4D2);</td>
            </tr>
            <tr>
            <td>Teal</td>
            <td>TColor($808000);</td>
            </tr>
            <tr>
            <td>Thistle</td>
            <td>TColor($D8BFD8);</td>
            </tr>
            <tr>
            <td>Tomato</td>
            <td>TColor($4763FF);</td>
            </tr>
            <tr>
            <td>Turquoise</td>
            <td>TColor($D0E040);</td>
            </tr>
            <tr>
            <td>Violet</td>
            <td>TColor($EE82EE);</td>
            </tr>
            <tr>
            <td>Wheat</td>
            <td>TColor($B3DEF5);</td>
            </tr>
            <tr>
            <td>White</td>
            <td>TColor($FFFFFF);</td>
            </tr>
            <tr>
            <td>WhiteSmoke</td>
            <td>TColor($F5F5F5);</td>
            </tr>
            <tr>
            <td>Yellow</td>
            <td>TColor($00FFFF);</td>
            </tr>
            <tr>
            <td>YellowGreen</td>
            <td>TColor($32CD9A);</td>
            </tr>
          </table>
          <p>
            <b>Extended Colors</b>
          </p>
          <table>
            <tr>
              <td><b>Color Name</b></td>
              <td><b>TColor Value</b></td>
            </tr>
            <tr>
            <td>MoneyGreen</td>
            <td>TColor($C0DCC0);</td>
            </tr>
            <tr>
            <td>Cream</td>
            <td>TColor($F0FBFF);</td>
            </tr>
            <tr>
            <td>MedGray</td>
            <td>TColor($A4A0A0);</td>
            </tr>
          </table>
          <p>
            <b>Windows System Colors</b>
          </p>
          <table>
              <tr>
              <td><b>Color Name</b></td>
              <td><b>TColor Value</b></td>
            </tr>
            <tr>
            <td>SysScrollBar</td>
            <td>TColor($FF000000);</td>
            </tr>
            <tr>
            <td>SysBackground</td>
            <td>TColor($FF000001);</td>
            </tr>
            <tr>
            <td>SysActiveCaption</td>
            <td>TColor($FF000002);</td>
            </tr>
            <tr>
            <td>SysInactiveCaption</td>
            <td>TColor($FF000003);</td>
            </tr>
            <tr>
            <td>SysMenu</td>
            <td>TColor($FF000004);</td>
            </tr>
            <tr>
            <td>SysWindow</td>
            <td>TColor($FF000005);</td>
            </tr>
            <tr>
            <td>SysWindowFrame</td>
            <td>TColor($FF000006);</td>
            </tr>
            <tr>
            <td>SysMenuText</td>
            <td>TColor($FF000007);</td>
            </tr>
            <tr>
            <td>SysWindowText</td>
            <td>TColor($FF000008);</td>
            </tr>
            <tr>
            <td>SysCaptionText</td>
            <td>TColor($FF000009);</td>
            </tr>
            <tr>
            <td>SysActiveBorder</td>
            <td>TColor($FF00000A);</td>
            </tr>
            <tr>
            <td>SysInactiveBorder</td>
            <td>TColor($FF00000B);</td>
            </tr>
            <tr>
            <td>SysAppWorkSpace</td>
            <td>TColor($FF00000C);</td>
            </tr>
            <tr>
            <td>SysHighlight</td>
            <td>TColor($FF00000D);</td>
            </tr>
            <tr>
            <td>SysHighlightText</td>
            <td>TColor($FF00000E);</td>
            </tr>
            <tr>
            <td>SysBtnFace</td>
            <td>TColor($FF00000F);</td>
            </tr>
            <tr>
            <td>SysBtnShadow</td>
            <td>TColor($FF000010);</td>
            </tr>
            <tr>
            <td>SysGrayText</td>
            <td>TColor($FF000011);</td>
            </tr>
            <tr>
            <td>SysBtnText</td>
            <td>TColor($FF000012);</td>
            </tr>
            <tr>
            <td>SysInactiveCaptionText</td>
            <td>TColor($FF000013);</td>
            </tr>
            <tr>
            <td>SysBtnHighlight</td>
            <td>TColor($FF000014);</td>
            </tr>
            <tr>
            <td>Sys3DDkShadow</td>
            <td>TColor($FF000015);</td>
            </tr>
            <tr>
            <td>Sys3DLight</td>
            <td>TColor($FF000016);</td>
            </tr>
            <tr>
            <td>SysInfoText</td>
            <td>TColor($FF000017);</td>
            </tr>
            <tr>
            <td>SysInfoBk</td>
            <td>TColor($FF000018);</td>
            </tr>
            <tr>
            <td>SysHotLight</td>
            <td>TColor($FF00001A);</td>
            </tr>
            <tr>
            <td>SysGradientActiveCaption</td>
            <td>TColor($FF00001B);</td>
            </tr>
            <tr>
            <td>SysGradientInactiveCaption</td>
            <td>TColor($FF00001C);</td>
            </tr>
            <tr>
            <td>SysMenuHighlight</td>
            <td>TColor($FF00001D);</td>
            </tr>
            <tr>
            <td>SysMenuBar</td>
            <td>TColor($FF00001E);</td>
            </tr>
            <tr>
            <td>SysNone</td>
            <td>TColor($1FFFFFFF);</td>
            </tr>
            <tr>
            <td>Null</td>
            <td>TColor($00000000);</td>
            </tr>
            <tr>
            <td>SysDefault</td>
            <td>TColor($20000000);</td>
            </tr>          
          </table>
        </descr>
        <seealso>
          <link id="TColor"/>
          <link id="TColorRef"/>
        </seealso>
      </element>

      <element name="TColorRec.R">
        <short>
          Byte representing the Red component in a color value.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TColorRec.G">
        <short>
          Byte representing the Green component in a color value.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TColorRec.B">
        <short>
          Byte representing the Blue component in a color value.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TColorRec.A">
        <short>
          Byte representing the Alpha Channel or Transparency in a TColor value.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TColorRec.Color">
        <short>
          TColor value for a given color.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="operator TColorRec.:=(AColor: TColor): TColorRec">
        <short>
          Assignment operator which accepts a TColor value.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="operator TColorRec.:=(AColor: TColorRec): TColor">
        <short>
          Assignment operator which accepts a TColorRec instance.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TColors">
        <short>
          Alias for the TColorRec type.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TAlphaColors">
      <short>
        Provides access to TAlphaColor values or their ARGB channel values.
      </short>
      <descr>
        <p>
          <var>TAlphaColors</var> is a record type used to access Alpha color 
          values as TAlphaColor type, or as the byte values in the A, R, G, and 
          B component values. It includes constants with symbolic names for a 
          variety of TAlphaColor values, including:
        </p>
        <table>
          <tr>
            <td><b>Constant Name</b></td>
            <td><b>TAlphaColor Value</b></td>
          </tr>
          <tr>
            <td>Null</td>
            <td>TAlphaColor(0);</td>
          </tr>
          <tr>
            <td>Alpha</td>
            <td>TAlphaColor($ff000000);</td>
          </tr>
          <tr>
            <td>Black</td>
            <td>Alpha;</td>
          </tr>
          <tr>
            <td>Blue</td>
            <td>TAlphaColor($ff0000ff);</td>
          </tr>
          <tr>
            <td>Green</td>
            <td>TAlphaColor($ff008000);</td>
          </tr>
          <tr>
            <td>Lime</td>
            <td>TAlphaColor($ff00ff00);</td>
          </tr>
          <tr>
            <td>Red</td>
            <td>TAlphaColor($ffff0000);</td>
          </tr>
          <tr>
            <td>White</td>
            <td>TAlphaColor($ffffffff);</td>
          </tr>
          <tr>
            <td>AliceBlue</td>
            <td>TAlphaColor($ffF0F8FF);</td>
          </tr>
          <tr>
            <td>AntiqueWhite</td>
            <td>TAlphaColor($ffFAEBD7);</td>
          </tr>
          <tr>
            <td>Aqua</td>
            <td>TAlphaColor($ff00FFFF);</td>
          </tr>
          <tr>
            <td>AquaMarine</td>
            <td>TAlphaColor($ff7FFFD4);</td>
          </tr>
          <tr>
            <td>Azure</td>
            <td>TAlphaColor($ffF0FFFF);</td>
          </tr>
          <tr>
            <td>Beige</td>
            <td>TAlphaColor($ffF5F5DC);</td>
          </tr>
          <tr>
            <td>Bisque</td>
            <td>TAlphaColor($ffFFE4C4);</td>
          </tr>
          <tr>
            <td>BlanchedAlmond</td>
            <td>TAlphaColor($ffFFEBCD);</td>
          </tr>
          <tr>
            <td>BlueViolet</td>
            <td>TAlphaColor($ff8A2BE2);</td>
          </tr>
          <tr>
            <td>Brown</td>
            <td>TAlphaColor($ffA52A2A);</td>
          </tr>
          <tr>
            <td>BurlyWood</td>
            <td>TAlphaColor($ffDEB887);</td>
          </tr>
          <tr>
            <td>CadetBlue</td>
            <td>TAlphaColor($ff5F9EA0);</td>
          </tr>
          <tr>
            <td>Chartreuse</td>
            <td>TAlphaColor($ff7FFF00);</td>
          </tr>
          <tr>
            <td>Chocolate</td>
            <td>TAlphaColor($ffD2691E);</td>
          </tr>
          <tr>
            <td>Coral</td>
            <td>TAlphaColor($ffFF7F50);</td>
          </tr>
          <tr>
            <td>CornflowerBlue</td>
            <td>TAlphaColor($ff6495ED);</td>
          </tr>
          <tr>
            <td>CornSilk</td>
            <td>TAlphaColor($ffFFF8DC);</td>
          </tr>
          <tr>
            <td>Crimson</td>
            <td>TAlphaColor($ffDC143C);</td>
          </tr>
          <tr>
            <td>Cyan</td>
            <td>TAlphaColor($ff00FFFF);</td>
          </tr>
          <tr>
            <td>DarkBlue</td>
            <td>TAlphaColor($ff00008B);</td>
          </tr>
          <tr>
            <td>DarkCyan</td>
            <td>TAlphaColor($ff008B8B);</td>
          </tr>
          <tr>
            <td>DarkGoldenRod</td>
            <td>TAlphaColor($ffB8860B);</td>
          </tr>
          <tr>
            <td>DarkGray</td>
            <td>TAlphaColor($ffA9A9A9);</td>
          </tr>
          <tr>
            <td>DarkGreen</td>
            <td>TAlphaColor($ff006400);</td>
          </tr>
          <tr>
            <td>DarkGrey</td>
            <td>TAlphaColor($ffA9A9A9);</td>
          </tr>
          <tr>
            <td>DarkKhaki</td>
            <td>TAlphaColor($ffBDB76B);</td>
          </tr>
          <tr>
            <td>DarkMagenta</td>
            <td>TAlphaColor($ff8B008B);</td>
          </tr>
          <tr>
            <td>DarkOliveGreen</td>
            <td>TAlphaColor($ff556B2F);</td>
          </tr>
          <tr>
            <td>DarkOrange</td>
            <td>TAlphaColor($ffFF8C00);</td>
          </tr>
          <tr>
            <td>DarkOrchid</td>
            <td>TAlphaColor($ff9932CC);</td>
          </tr>
          <tr>
            <td>DarkRed</td>
            <td>TAlphaColor($ff8B0000);</td>
          </tr>
          <tr>
            <td>DarkSalmon</td>
            <td>TAlphaColor($ffE9967A);</td>
          </tr>
          <tr>
            <td>DarkSeaGreen</td>
            <td>TAlphaColor($ff8FBC8F);</td>
          </tr>
          <tr>
            <td>DarkSlateBlue</td>
            <td>TAlphaColor($ff483D8B);</td>
          </tr>
          <tr>
            <td>DarkSlateGray</td>
            <td>TAlphaColor($ff2F4F4F);</td>
          </tr>
          <tr>
            <td>DarkSlateGrey</td>
            <td>TAlphaColor($ff2F4F4F);</td>
          </tr>
          <tr>
            <td>DarkTurquoise</td>
            <td>TAlphaColor($ff00CED1);</td>
          </tr>
          <tr>
            <td>DarkViolet</td>
            <td>TAlphaColor($ff9400D3);</td>
          </tr>
          <tr>
            <td>DeepPink</td>
            <td>TAlphaColor($ffFF1493);</td>
          </tr>
          <tr>
            <td>DeepSkyBlue</td>
            <td>TAlphaColor($ff00BFFF);</td>
          </tr>
          <tr>
            <td>DimGray</td>
            <td>TAlphaColor($ff696969);</td>
          </tr>
          <tr>
            <td>DimGrey</td>
            <td>TAlphaColor($ff696969);</td>
          </tr>
          <tr>
            <td>DodgerBlue</td>
            <td>TAlphaColor($ff1E90FF);</td>
          </tr>
          <tr>
            <td>Firebrick</td>
            <td>TAlphaColor($ffB22222);</td>
          </tr>
          <tr>
            <td>FloralWhite</td>
            <td>TAlphaColor($ffFFFAF0);</td>
          </tr>
          <tr>
            <td>ForestGreen</td>
            <td>TAlphaColor($ff228B22);</td>
          </tr>
          <tr>
            <td>Fuchsia</td>
            <td>TAlphaColor($ffFF00FF);</td>
          </tr>
          <tr>
            <td>Gainsboro</td>
            <td>TAlphaColor($ffDCDCDC);</td>
          </tr>
          <tr>
            <td>GhostWhite</td>
            <td>TAlphaColor($ffF8F8FF);</td>
          </tr>
          <tr>
            <td>Gold</td>
            <td>TAlphaColor($ffFFD700);</td>
          </tr>
          <tr>
            <td>GoldenRod</td>
            <td>TAlphaColor($ffDAA520);</td>
          </tr>
          <tr>
            <td>Gray</td>
            <td>TAlphaColor($ff808080);</td>
          </tr>
          <tr>
            <td>GreenYellow</td>
            <td>TAlphaColor($ffADFF2F);</td>
          </tr>
          <tr>
            <td>Grey</td>
            <td>TAlphaColor($ff808080);</td>
          </tr>
          <tr>
            <td>HoneyDew</td>
            <td>TAlphaColor($ffF0FFF0);</td>
          </tr>
          <tr>
            <td>HotPink</td>
            <td>TAlphaColor($ffFF69B4);</td>
          </tr>
          <tr>
            <td>IndianRed</td>
            <td>TAlphaColor($ffCD5C5C);</td>
          </tr>
          <tr>
            <td>Indigo</td>
            <td>TAlphaColor($ff4B0082);</td>
          </tr>
          <tr>
            <td>Ivory</td>
            <td>TAlphaColor($ffFFFFF0);</td>
          </tr>
          <tr>
            <td>Khaki</td>
            <td>TAlphaColor($ffF0E68C);</td>
          </tr>
          <tr>
            <td>Lavender</td>
            <td>TAlphaColor($ffE6E6FA);</td>
          </tr>
          <tr>
            <td>LavenderBlush</td>
            <td>TAlphaColor($ffFFF0F5);</td>
          </tr>
          <tr>
            <td>LawnGreen</td>
            <td>TAlphaColor($ff7CFC00);</td>
          </tr>
          <tr>
            <td>LemonChiffon</td>
            <td>TAlphaColor($ffFFFACD);</td>
          </tr>
          <tr>
            <td>LightBlue</td>
            <td>TAlphaColor($ffADD8E6);</td>
          </tr>
          <tr>
            <td>LightCoral</td>
            <td>TAlphaColor($ffF08080);</td>
          </tr>
          <tr>
            <td>LightCyan</td>
            <td>TAlphaColor($ffE0FFFF);</td>
          </tr>
          <tr>
            <td>LightGoldenRodYellow</td>
            <td>TAlphaColor($ffFAFAD2);</td>
          </tr>
          <tr>
            <td>LightGray</td>
            <td>TAlphaColor($ffD3D3D3);</td>
          </tr>
          <tr>
            <td>LightGreen</td>
            <td>TAlphaColor($ff90EE90);</td>
          </tr>
          <tr>
            <td>LightGrey</td>
            <td>TAlphaColor($ffD3D3D3);</td>
          </tr>
          <tr>
            <td>LightPink</td>
            <td>TAlphaColor($ffFFB6C1);</td>
          </tr>
          <tr>
            <td>LightSalmon</td>
            <td>TAlphaColor($ffFFA07A);</td>
          </tr>
          <tr>
            <td>LightSeaGreen</td>
            <td>TAlphaColor($ff20B2AA);</td>
          </tr>
          <tr>
            <td>LightSkyBlue</td>
            <td>TAlphaColor($ff87CEFA);</td>
          </tr>
          <tr>
            <td>LightSlateGray</td>
            <td>TAlphaColor($ff778899);</td>
          </tr>
          <tr>
            <td>LightSlateGrey</td>
            <td>TAlphaColor($ff778899);</td>
          </tr>
          <tr>
            <td>LightSteelBlue</td>
            <td>TAlphaColor($ffB0C4DE);</td>
          </tr>
          <tr>
            <td>LightYellow</td>
            <td>TAlphaColor($ffFFFFE0);</td>
          </tr>
          <tr>
            <td>LtGray</td>
            <td>TAlphaColor($ffC0C0C0);</td>
          </tr>
          <tr>
            <td>MedGray</td>
            <td>TAlphaColor($ffA0A0A0);</td>
          </tr>
          <tr>
            <td>DkGray</td>
            <td>TAlphaColor($ff808080);</td>
          </tr>
          <tr>
            <td>MoneyGreen</td>
            <td>TAlphaColor($ffC0DCC0);</td>
          </tr>
          <tr>
            <td>LegacySkyBlue</td>
            <td>TAlphaColor($ffF0CAA6);</td>
          </tr>
          <tr>
            <td>Cream</td>
            <td>TAlphaColor($ffF0FBFF);</td>
          </tr>
          <tr>
            <td>LimeGreen</td>
            <td>TAlphaColor($ff32CD32);</td>
          </tr>
          <tr>
            <td>Linen</td>
            <td>TAlphaColor($ffFAF0E6);</td>
          </tr>
          <tr>
            <td>Magenta</td>
            <td>TAlphaColor($ffFF00FF);</td>
          </tr>
          <tr>
            <td>Maroon</td>
            <td>TAlphaColor($ff800000);</td>
          </tr>
          <tr>
            <td>MediumAquaMarine</td>
            <td>TAlphaColor($ff66CDAA);</td>
          </tr>
          <tr>
            <td>MediumBlue</td>
            <td>TAlphaColor($ff0000CD);</td>
          </tr>
          <tr>
            <td>MediumOrchid</td>
            <td>TAlphaColor($ffBA55D3);</td>
          </tr>
          <tr>
            <td>MediumPurple</td>
            <td>TAlphaColor($ff9370DB);</td>
          </tr>
          <tr>
            <td>MediumSeaGreen</td>
            <td>TAlphaColor($ff3CB371);</td>
          </tr>
          <tr>
            <td>MediumSlateBlue</td>
            <td>TAlphaColor($ff7B68EE);</td>
          </tr>
          <tr>
            <td>MediumSpringGreen</td>
            <td>TAlphaColor($ff00FA9A);</td>
          </tr>
          <tr>
            <td>MediumTurquoise</td>
            <td>TAlphaColor($ff48D1CC);</td>
          </tr>
          <tr>
            <td>MediumVioletRed</td>
            <td>TAlphaColor($ffC71585);</td>
          </tr>
          <tr>
            <td>MidnightBlue</td>
            <td>TAlphaColor($ff191970);</td>
          </tr>
          <tr>
            <td>MintCream</td>
            <td>TAlphaColor($ffF5FFFA);</td>
          </tr>
          <tr>
            <td>MistyRose</td>
            <td>TAlphaColor($ffFFE4E1);</td>
          </tr>
          <tr>
            <td>Moccasin</td>
            <td>TAlphaColor($ffFFE4B5);</td>
          </tr>
          <tr>
            <td>NavajoWhite</td>
            <td>TAlphaColor($ffFFDEAD);</td>
          </tr>
          <tr>
            <td>Navy</td>
            <td>TAlphaColor($ff000080);</td>
          </tr>
          <tr>
            <td>OldLace</td>
            <td>TAlphaColor($ffFDF5E6);</td>
          </tr>
          <tr>
            <td>Olive</td>
            <td>TAlphaColor($ff808000);</td>
          </tr>
          <tr>
            <td>OliveDrab</td>
            <td>TAlphaColor($ff6B8E23);</td>
          </tr>
          <tr>
            <td>Orange</td>
            <td>TAlphaColor($ffFFA500);</td>
          </tr>
          <tr>
            <td>OrangeRed</td>
            <td>TAlphaColor($ffFF4500);</td>
          </tr>
          <tr>
            <td>Orchid</td>
            <td>TAlphaColor($ffDA70D6);</td>
          </tr>
          <tr>
            <td>PaleGoldenRod</td>
            <td>TAlphaColor($ffEEE8AA);</td>
          </tr>
          <tr>
            <td>PaleGreen</td>
            <td>TAlphaColor($ff98FB98);</td>
          </tr>
          <tr>
            <td>PaleTurquoise</td>
            <td>TAlphaColor($ffAFEEEE);</td>
          </tr>
          <tr>
            <td>PaleVioletRed</td>
            <td>TAlphaColor($ffDB7093);</td>
          </tr>
          <tr>
            <td>PapayaWhip</td>
            <td>TAlphaColor($ffFFEFD5);</td>
          </tr>
          <tr>
            <td>PeachPuff</td>
            <td>TAlphaColor($ffFFDAB9);</td>
          </tr>
          <tr>
            <td>Peru</td>
            <td>TAlphaColor($ffCD853F);</td>
          </tr>
          <tr>
            <td>Pink</td>
            <td>TAlphaColor($ffFFC0CB);</td>
          </tr>
          <tr>
            <td>Plum</td>
            <td>TAlphaColor($ffDDA0DD);</td>
          </tr>
          <tr>
            <td>PowderBlue</td>
            <td>TAlphaColor($ffB0E0E6);</td>
          </tr>
          <tr>
            <td>Purple</td>
            <td>TAlphaColor($ff800080);</td>
          </tr>
          <tr>
            <td>RosyBrown</td>
            <td>TAlphaColor($ffBC8F8F);</td>
          </tr>
          <tr>
            <td>RoyalBlue</td>
            <td>TAlphaColor($ff4169E1);</td>
          </tr>
          <tr>
            <td>SaddleBrown</td>
            <td>TAlphaColor($ff8B4513);</td>
          </tr>
          <tr>
            <td>Salmon</td>
            <td>TAlphaColor($ffFA8072);</td>
          </tr>
          <tr>
            <td>SandyBrown</td>
            <td>TAlphaColor($ffF4A460);</td>
          </tr>
          <tr>
            <td>SeaGreen</td>
            <td>TAlphaColor($ff2E8B57);</td>
          </tr>
          <tr>
            <td>SeaShell</td>
            <td>TAlphaColor($ffFFF5EE);</td>
          </tr>
          <tr>
            <td>Sienna</td>
            <td>TAlphaColor($ffA0522D);</td>
          </tr>
          <tr>
            <td>Silver</td>
            <td>TAlphaColor($ffC0C0C0);</td>
          </tr>
          <tr>
            <td>SkyBlue</td>
            <td>TAlphaColor($ff87CEEB);</td>
          </tr>
          <tr>
            <td>SlateBlue</td>
            <td>TAlphaColor($ff6A5ACD);</td>
          </tr>
          <tr>
            <td>SlateGray</td>
            <td>TAlphaColor($ff708090);</td>
          </tr>
          <tr>
            <td>SlateGrey</td>
            <td>TAlphaColor($ff708090);</td>
          </tr>
          <tr>
            <td>Snow</td>
            <td>TAlphaColor($ffFFFAFA);</td>
          </tr>
          <tr>
            <td>SpringGreen</td>
            <td>TAlphaColor($ff00FF7F);</td>
          </tr>
          <tr>
            <td>SteelBlue</td>
            <td>TAlphaColor($ff4682B4);</td>
          </tr>
          <tr>
            <td>Tan</td>
            <td>TAlphaColor($ffD2B48C);</td>
          </tr>
          <tr>
            <td>Teal</td>
            <td>TAlphaColor($ff008080);</td>
          </tr>
          <tr>
            <td>Thistle</td>
            <td>TAlphaColor($ffD8BFD8);</td>
          </tr>
          <tr>
            <td>Tomato</td>
            <td>TAlphaColor($ffFF6347);</td>
          </tr>
          <tr>
            <td>Turquoise</td>
            <td>TAlphaColor($ff40E0D0);</td>
          </tr>
          <tr>
            <td>Violet</td>
            <td>TAlphaColor($ffEE82EE);</td>
          </tr>
          <tr>
            <td>Wheat</td>
            <td>TAlphaColor($ffF5DEB3);</td>
          </tr>
          <tr>
            <td>WhiteSmoke</td>
            <td>TAlphaColor($ffF5F5F5);</td>
          </tr>
          <tr>
            <td>Yellow</td>
            <td>TAlphaColor($ffFFFF00);</td>
          </tr>
          <tr>
            <td>YellowGreen</td>
            <td>TAlphaColor($ff9ACD32);</td>
          </tr>
        </table>
        <p>
          Use the constants in TAlphaColors to create a new record instance 
          with s specific TAlphaColor value.
        </p>
      </descr>
      <seealso/>
      </element>

      <!-- public -->
      <element name="TAlphaColors.Create">
      <short>
        Creates a new instance of the record type with the specified Alpha 
        color value.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColors.Create.Color">
      <short>
        Alpha color value represented in the new record instance.
      </short>
      </element>

      <element name="TAlphaColors.ColorToRGB">
      <short>
        Converts an Alpha color value to its RGB representation as a longint 
        value (like TColor).
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColors.ColorToRGB.Color">
      <short>
        Alpha color value converted in the routine.
      </short>
      </element>
      <element name="TAlphaColors.ColorToRGB.Result">
      <short>
        Longint type with the RGB value for the specified Alpha color.
      </short>
      </element>

      <element name="TAlphaColors.Color">
      <short>
        Provides access to the TAlphaColor value passed as an argument to the 
        record instance.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColors.HiWord">
      <short>
        Provides access to the high-order Word value in the Color member.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColors.LoWord">
      <short>
        Provides access to the low-order Word value in the Color member.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColors.R">
      <short>
        Provides access to the intensity for the Red channel in the Color 
        member.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColors.G">
      <short>
        Provides access to the intensity for the Green channel in the Color 
        member.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColors.B">
      <short>
        Provides access to the intensity for the Blue channel in the Color 
        member.
      </short><descr/>
      <seealso/>
      </element>

      <element name="TAlphaColors.A">
      <short>
        Provides access to the Alpha channel or opacity in the Color member.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorRec">
      <short>
        Alias to the TAlphaColors type.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="PAlphaColorRec">
      <short>
        Pointer to a TAlphaColorRec type.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF">
      <short>
        Handles TAlphaColor values where the ARGB channels are specified using 
        single precision floating point values.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.R">
      <short>
        Intensity for the Red channel as a single precision floating point 
        value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.G">
      <short>
        Intensity for the Green channel as a single precision floating point 
        value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.B">
      <short>
        Intensity for the Blue channel as a single precision floating point 
        value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.A">
      <short>
        Alpha channel (or opacity) as a single precision floating point value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.Epsilon">
      <short>
        Minimum value allowed in a 16-bit Alpha channel value (1.5259E-05 or 
        (1 / 65535)).
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.Create">
      <short>
        Creates a new instance of the record type with the Alpha color in the 
        specified argument(s).
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColorF.Create.Result">
      <short/>
      </element>
      <element name="TAlphaColorF.Create.R">
      <short>
        Intensity for the Red channel.
      </short>
      </element>
      <element name="TAlphaColorF.Create.G">
      <short>
        Intensity for the Green channel.
      </short>
      </element>
      <element name="TAlphaColorF.Create.B">
      <short>
        Intensity for the Blue channel.
      </short>
      </element>
      <element name="TAlphaColorF.Create.A">
      <short>
        Value for the Alpha channel (opacity).
      </short>
      </element>
      <element name="TAlphaColorF.Create.aColor">
      <short>
        TAlphaColor value for the new record instance.
      </short>
      </element>

      <!-- 
        I am not sure if the operator topics have the correct name identifier needed in FPDoc.
      -->
      <element name="operator TAlphaColorF.+(const aColor1, aColor2: TAlphaColorF): TAlphaColorF">
      <short>
        Implements an addition operator (+) which combines the specified 
        TAlphaColorF values, and returns the resulting TAlphaColorF value. The 
        A, R, G, and B channels are handled separately.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.-(const aColor1, aColor2: TAlphaColorF): TAlphaColorF">
      <short>
        Implements a subtraction operator (-) which removes the color in 
        aColor2 from the color in aColor1 and returns the modified color value. 
        The A, R, G, and B channels are handled separately.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.=(const aColor1, aColor2: TAlphaColorF): Boolean">
      <short>
        Implements an equality comparison operator (=) used to compare the 
        specified color values. Return <b>True</b> if the A, R, G, and B 
        channels in the specified colors each have the same values.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.&lt;&gt;(const aColor1, aColor2: TAlphaColorF): Boolean">
      <short>
        Implements an inequality comparison operator (&lt;&gt;) used to compare 
        the specified color values. Returns <b>True</b> if the colors have 
        different values.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.-(const aColor: TAlphaColorF): TAlphaColorF">
      <short>
        Implements a subtraction operator (-) used to remove (negate) the color 
        in AColor from the specified color value. Returns the modified color 
        value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.*(const aColor1, aColor2: TAlphaColorF): TAlphaColorF">
      <short>
        Implements a multiply operator (*) for TAlphaColorF color values in 
        aColor1 and aColor2. Returns the derived TAlphaColorF value.
      </short>
      <descr>
        <p>
          Multiply is a blend mode which takes the RGB channel values from 
          aColor1 and multiplies each channel by the corresponding value in 
          aColor2. The resulting color value will be darker if either color was 
          brighter than Black. Multiply is a commutative operation; swapping 
          value in aColor1 and aColor does not affect the blended result.
        </p>
      </descr>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.*(const aColor: TAlphaColorF; const aFactor: Single): TAlphaColorF">
      <short>
        Implements a multiply operator (*) which applies a TAlphaColorF color 
        value and a factor to the specified color value. Returns the derived TAlphaColorF value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF.*(const aFactor: Single; const aColor: TAlphaColorF): TAlphaColorF">
      <short>
        Implements a multiply operator (*) which applies a factor to the A, R, 
        G, and B channels in the specified color. Returns the derived 
        TAlphaColorF value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="operator TAlphaColorF./(const aColor: TAlphaColorF; const aFactor: Single): TAlphaColorF">
      <short>
        Implements a division operator (/) which derives a TAlphaColorF color 
        value divided by a factor. The return value contains the derived 
        TAlphaColorF value.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAlphaColorF.PremultipliedAlpha">
      <short>
        Gets an AlphaColor value where the R, G, and B members have already been multiplied by the Alpha channel (opacity) in the A member.        
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColorF.PremultipliedAlpha.Result">
      <short>
        Alpha color value with the R, G, and B members premultiplied by the A channel.
      </short>
      </element>

      <element name="TAlphaColorF.UnpremultipliedAlpha">
      <short/>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColorF.UnpremultipliedAlpha.Result">
      <short/>
      </element>

      <element name="TAlphaColorF.Clamp">
      <short>
        Ensures that A, R, G, and B are within the minimum value (0) and maximum value (1) for the members.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColorF.Clamp.Result">
      <short>
        Color value after limits are applied to the members.
      </short>
      </element>

      <element name="TAlphaColorF.ToAlphaColor">
      <short>
        Gets a TAlphaColor value where the A, R, G, and B channels have been 
        converted to their Integer equivalents n the range 0..255.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAlphaColorF.ToAlphaColor.Result">
      <short>
        TAlphaColor value for the A, R, G, and B channels in the record 
        instance.
      </short>
      </element>

      <!-- Message dialog related -->
      <element name="TMsgDlgType">
        <short>
          Represents message dialog types and their associated icons.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TMsgDlgType.mtWarning">
        <short>
          Indicates a dialog used to display a warning message with the 
          corresponding icon for the dialog type.
        </short>
      </element>
      <element name="TMsgDlgType.mtError">
        <short>
          Indicates a dialog used to display an error message with the 
          corresponding icon for the dialog type.
        </short>
      </element>
      <element name="TMsgDlgType.mtInformation">
        <short>
          Indicates a dialog used to display an information message with the 
          corresponding icon for the dialog type.
        </short>
      </element>
      <element name="TMsgDlgType.mtConfirmation">
        <short>
          Indicates a dialog used to display a confirmation message with the 
          corresponding icon for the dialog type.
        </short>
      </element>
      <element name="TMsgDlgType.mtCustom">
        <short>
          Indicates a dialog used to display a custom message.
        </short>
      </element>

      <element name="TMsgDlgBtn">
        <short>
          Represents the buttons which can be displayed on a message dialog.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TMsgDlgBtn.mbOK">
        <short>Represents the OK button.</short>
      </element>
      <element name="TMsgDlgBtn.mbCancel">
        <short>Represents the Cancel button.</short>
      </element>
      <element name="TMsgDlgBtn.mbAbort">
        <short>Represents the Abort button.</short>
      </element>
      <element name="TMsgDlgBtn.mbRetry">
        <short>Represents the Retry button.</short>
      </element>
      <element name="TMsgDlgBtn.mbIgnore">
        <short>Represents the Ignore button.</short>
      </element>
      <element name="TMsgDlgBtn.mbYes">
        <short>Represents the Yes button.</short>
      </element>
      <element name="TMsgDlgBtn.mbNo">
        <short>Represents the No button.</short>
      </element>
      <element name="TMsgDlgBtn.mbAll">
        <short>Represents the All button.</short>
      </element>
      <element name="TMsgDlgBtn.mbNoToAll">
        <short>Represents the No To All button.</short>
      </element>
      <element name="TMsgDlgBtn.mbYesToAll">
        <short>Represents the Yes to All button.</short>
      </element>
      <element name="TMsgDlgBtn.mbHelp">
        <short>Represents the Help button.</short>
      </element>
      <element name="TMsgDlgBtn.mbClose">
        <short>Represents the Close button.</short>
      </element>

      <element name="TMsgDlgButtons">
        <short>
          Set type used to store values from the TMsgDlgBtn enumeration.
        </short>
        <descr/>
        <seealso/>
      </element>
      
      <element name="TModalResult">
        <short>
          Represents modal result values returned from a dialog.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="PModalResult">
        <short>
          Pointer to a TModalResult type.
        </short>
        <descr/>
        <seealso>
          <link id="TModalResult"/>
        </seealso>
      </element>

      <!-- modal result constants -->
      <element name="mrNone">
      <short>Dialog was closed without selecting a button.</short>
      </element>
      <element name="mrOK">
      <short>Dialog was closed by clicking on the OK button.</short>
      </element>
      <element name="mrCancel">
      <short>Dialog was closed by clicking on the Cancel button.</short>
      </element>
      <element name="mrAbort">
      <short>Dialog was closed by clicking on the Abort button.</short>
      </element>
      <element name="mrRetry">
      <short>Dialog was closed by clicking on the Retry button.</short>
      </element>
      <element name="mrIgnore">
      <short>Dialog was closed by clicking on the Ignore button.</short>
      </element>
      <element name="mrYes">
      <short>Dialog was closed by clicking on the Yes button.</short>
      </element>
      <element name="mrNo">
      <short>Dialog was closed by clicking on the No button.</short>
      </element>
      <element name="mrAll">
      <short>Dialog was closed by clicking on the All button.</short>
      </element>
      <element name="mrNoToAll">
      <short>Dialog was closed by clicking on the No To All button.</short>
      </element>
      <element name="mrYesToAll">
      <short>Dialog was closed by clicking on the Yes To All button.</short>
      </element>
      <element name="mrClose">
      <short>Dialog was closed by clicking on the Close button.</short>
      </element>
      <element name="mrLast">
      <short>Last modal result value (same as mrClose).</short>
      </element>

      <element name="ModalResultStr">
        <short>
          An indexed array of strings representing the modal result constants.
        </short>
        <descr>
          <p>
            <var>ModalResultStr</var> is an array with ShortString values for 
            each of the Integer modal result constants in the range 
            mrNone..mrLast. Values in ModalResultStr can be accessed using the 
            modal result constant to get the string at the corresponding 
            ordinal position in the array.
          </p>
        </descr>
        <seealso>
          <link id="TModalResult"/>
        </seealso>
      </element>

      <element name="TCloseAction">
      <short>
      Represents actions that can be performed when a form is closed.
      </short>
      <descr/>
      <seealso>
      <link id="TCloseActions"/>
      </seealso>
      </element>
      <element name="TCloseAction.caNone">
      <short>Do nothing.</short>
      </element>
      <element name="TCloseAction.caHide">
      <short>The form is hidden.</short>
      </element>
      <element name="TCloseAction.caFree">
      <short>The form is freed.</short>
      </element>
      <element name="TCloseAction.caMinimize">
      <short>The form is minimized.</short>
      </element>

      <element name="TCloseActions">
      <short>
        Set type used to store values from the TCloseAction enumeration.
      </short>
      <descr/>
      <seealso>
      <link id="TCloseAction"/>
      </seealso>
      </element>

      <element name="TMouseButton">
      <short>
        Identifiers used to represent logical mouse buttons.
      </short>
      <descr>
        <p>
          The value represent <b>logical</b> buttons; the left and right 
          physical buttons can be swapped for left-handed users.
        </p>
      </descr>
      <seealso>
        <link id="TMouseButtons"/>
      </seealso>
      </element>
      <element name="TMouseButton.mbLeft">
      <short>
        Represents the left mouse button. It might be physically the right 
        button if the system is configured to act like that, for example for a 
        left handled person.
      </short>
      </element>
      <element name="TMouseButton.mbRight">
      <short>
        Represents the right mouse button. It might be physically the left 
        button if the system is configured to act like that, for example for a 
        left handled person.
      </short>
      </element>
      <element name="TMouseButton.mbMiddle">
      <short>Represents the middle mouse button.</short>
      </element>
      <element name="TMouseButton.mbExtra1">
      <short>
        Represents the first extra mouse button.
      </short>
      </element>
      <element name="TMouseButton.mbExtra2">
      <short>
        Represents the second extra mouse button.
      </short>
      </element>

      <element name="TMouseButtons">
      <short>
        Set type used to store values from the TMouseButton enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TMouseButton"/>
      </seealso>
      </element>

      <element name="TTabOrder">
      <short>
        Range type used to represent the tab order for windowed controls.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TDragKind">
      <short>
        Indicates whether a control performs drag-drop or drag-dock operations.
      </short>
      <descr>
        <p>
          <var>TDragKind</var> is an enumeration type with values that indicate 
          the action performed when the mouse is used to start a drag operation.
        </p>
        <p>
          TDragKind is the type used to implement the DragKind property in  
          TControl (in LCL).
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="TDragKind.dkDrag">
      <short>Drag operation performed is drag-and-drop.</short>
      </element>
      <element name="TDragKind.dkDock">
      <short>Drag operation performed is drag-and-dock.</short>
      </element>

      <element name="TDragKinds">
      <short>
        Set type used to store values from the TDragKind enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TDragKind"/>
      </seealso>
      </element>

      <element name="TDragMode">
      <short>
        Indicates whether a drag operation is started automatically or manually.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TDragMode.dmManual">
        <short>A Drag operation can be started explicitly in code.</short>
      </element>
      <element name="TDragMode.dmAutomatic">
        <short>
          A Drag operation can be automatically started when the left mouse 
          button is pressed and held over a control.
        </short>
      </element>

      <element name="TDragModes">
      <short>
        Set type used to store values from the TDragMode enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TDragMode"/>
      </seealso>
      </element>

      <element name="TDragState">
      <short>
        Values representing state changes for a drag operation.
      </short>
      <descr>
        <p>
          These values are sent in drag messages. They allow a control to 
          perform special actions when the mouse is moved into, within, or out 
          of a control.
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="TDragState.dsDragEnter">
        <short>The Mouse has entered a control.</short>
      </element>
      <element name="TDragState.dsDragLeave">
        <short>The Mouse has exited a control.</short>
      </element>
      <element name="TDragState.dsDragMove">
      <short>
        The Mouse position has changed in the client area for the a control.
      </short>
      </element>

      <element name="TDragStates">
      <short>
        Set type used to store values from the TDragState enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TDragState"/>
      </seealso>
      </element>

      <element name="TDragMessage">
      <short>Message types used by the DragManager in the Lazarus LCL.</short>
      <descr/>
      <seealso>
        <link id="TDragState"/>
      </seealso>
      </element>
      <element name="TDragMessage.dmDragEnter">
      <short>
        Message sent when the mouse enters a control during a drag operation.
      </short>
      </element>
      <element name="TDragMessage.dmDragLeave">
      <short>
        Message sent when the mouse exits a control during a drag operation.
      </short>
      </element>
      <element name="TDragMessage.dmDragMove">
      <short>
        Message sent when the mouse position changes in the client area for a 
        control during a drag operation.
      </short>
      </element>
      <element name="TDragMessage.dmDragDrop">
      <short>
        Message sent when the mouse button is released over a drop target 
        during a drag operation.
      </short>
      </element>
      <element name="TDragMessage.dmDragCancel">
      <short>
        Message sent when a drag operation is cancelled.
      </short>
      </element>
      <element name="TDragMessage.dmFindTarget">
      <short>
        Message sent to locate a potential drop target under the mouse.
      </short>
      </element>

      <element name="TDragMessages">
      <short>
        Set type used to store values from the TDragMessage enumeration.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TAnchorKind">
      <short>
        Identifies the edge on a control where border spacing is applied or 
        anchoring is performed.
      </short>
      <descr/>
      <seealso>
        <link id="TAnchors"/>
      </seealso>
      </element>
      <element name="TAnchorKind.akTop">
      <short>
        Indicates the top edge is used to apply border spacing or anchoring.
      </short>
      </element>
      <element name="TAnchorKind.akLeft">
      <short>
        Indicates the left edge is used to apply border spacing or anchoring.
      </short>
      </element>
      <element name="TAnchorKind.akRight">
      <short>
        Indicates the right edge is used to apply border spacing or anchoring.
      </short>
      </element>
      <element name="TAnchorKind.akBottom">
      <short>
        Indicates the bottom edge is used to apply border spacing or anchoring.
      </short>
      </element>

      <element name="TAnchors">
      <short>
        Set type used to store values from the TAnchorKind enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TAnchorKind"/>
      </seealso>
      </element>

      <element name="TAnchorKinds">
      <short>
        Set type used to store values from the TAnchorKind enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TAnchorKind"/>
      </seealso>
      </element>

      <element name="TAnchorSideReference">
      <short>
        Indicates the edge on a control used to anchor a control vertically.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TAnchorSideReference.asrTop">
      <short>
        A control is anchored to the top edge of the reference control.
      </short>
      </element>
      <element name="TAnchorSideReference.asrBottom">
      <short>
        A control is anchored to the bottom edge of the reference control.
      </short>
      </element>
      <element name="TAnchorSideReference.asrCenter">
      <short>
        The center point for a control is anchored to the center of the 
        reference control.
      </short>
      </element>

      <element name="TAnchorSideReferences">
      <short>
        Set type used to store values from the TAnchorSideReference enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TAnchorSideReference"/>
      </seealso>
      </element>

      <element name="TScrollCode">
      <short>
        Defines codes for the actions performed on a scroll bar.
      </short>
      <descr/>
      <notes>
        <note>
          The are no use cases in RTL, FCL, LCL, or LazUtils. Delphi 
          compatibility? Fresnel?
        </note>
      </notes>
      <seealso/>
      </element>
      <element name="TScrollCode.scLineUp">
      <short>
        The top or left arrow on the scroll bar was clicked, or the Up or Left 
        cursor key was pressed.
      </short>
      </element>
      <element name="TScrollCode.scLineDown">
      <short>
        The bottom or right arrow on the scroll bar was clicked, or the Down or 
        Right cursor key was pressed.
      </short>
      </element>
      <element name="TScrollCode.scPageUp">
      <short>
        The area before the thumb tab on the scroll bar was clicked, or the 
        PgUp key was pressed.
      </short>
      </element>
      <element name="TScrollCode.scPageDown">
      <short>
        The area after the thumb tab on the scroll bar was clicked, or the PgDn 
        key was pressed.
      </short>
      </element>
      <element name="TScrollCode.scPosition">
      <short>
        The thumb tab on the scroll bar was dragged and released at a new 
        position.
      </short>
      </element>
      <element name="TScrollCode.scTrack">
      <short>
        An active drag operation for the thumb tab on the scroll bar has 
        reported a new position.
      </short>
      </element>
      <element name="TScrollCode.scTop">
      <short>
        The thumb tab on the scroll bar has been moved to its minimum top or 
        left position.
      </short>
      </element>
      <element name="TScrollCode.scBottom">
      <short>
        The thumb tab on the scroll bar has been moved to its maximum bottom or 
        right position.
      </short>
      </element>
      <element name="TScrollCode.scEndScroll">
      <short>
        A drag operation for the thumb tab on a scroll bar has been completed 
        (mouse button released).
      </short>
      </element>

      <element name="TScrollCodes">
      <short>
        Set type used to store values from the TScrollCode enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TScrollCode"/>
      </seealso>
      </element>

      <!-- Cursor constants -->
      <element name="TCursor">
      <short>Defines the range of values used for cursor shapes.</short>
      <descr>
      <p>
        <var>TCursor</var> is an Integer type which defines the range of values 
        used for cursor shapes. <var>TCursor</var> includes the following 
        values:
      </p>
      <p><b>Standard Cursors</b></p>
      <dl>
      <dt>crDefault</dt>
      <dd>TCursor(0) - current cursor unchanged</dd>
      <dt>crNone</dt>
      <dd>TCursor(-1) - hide cursor</dd>
      <dt>crArrow</dt>
      <dd>TCursor(-2) - normal cursor</dd>
      <dt>crCross</dt>
      <dd>TCursor(-3) - graphics cursor, for pixel or rectangle selection</dd>
      <dt>crIBeam</dt>
      <dd>TCursor(-4) - text cursor, for setting insertion point</dd>
      </dl>
      <p><b>Sizing Cursors</b></p>
      <dl>
      <dt>crSize</dt>
      <dd>TCursor(-22)</dd>
      <dt>crSizeAll</dt>
      <dd>TCursor(-22)</dd>
      <dt>crSizeNESW</dt>
      <dd>TCursor(-6) - diagonal north east - south west</dd>
      <dt>crSizeNS</dt>
      <dd>TCursor(-7)</dd>
      <dt>crSizeNWSE</dt>
      <dd>TCursor(-8)</dd>
      <dt>crSizeWE</dt>
      <dd>TCursor(-9)</dd>
      <dt>crSizeNW</dt>
      <dd>TCursor(-23)</dd>
      <dt>crSizeN</dt>
      <dd>TCursor(-24)</dd>
      <dt>crSizeNE</dt>
      <dd>TCursor(-25)</dd>
      <dt>crSizeW</dt>
      <dd>TCursor(-26)</dd>
      <dt>crSizeE</dt>
      <dd>TCursor(-27)</dd>
      <dt>crSizeSW</dt>
      <dd>TCursor(-28)</dd>
      <dt>crSizeS</dt>
      <dd>TCursor(-29)</dd>
      <dt>crSizeSE</dt>
      <dd>TCursor(-30)</dd>
      </dl>
      <p><b>Drag and Drop Cursors</b></p>
      <dl>
      <dt>crDrag</dt>
      <dd>TCursor(-12) - dragging, drop allowed</dd>
      <dt>crNoDrop</dt>
      <dd>TCursor(-13) - dragging, drop disallowed/rejected</dd>
      <dt>crMultiDrag</dt>
      <dd>TCursor(-16) - dragging multiple items</dd>
      <dt>crNo</dt>
      <dd>TCursor(-18)</dd>
      <dt>Splitter Cursors</dt>
      <dd></dd>
      <dt>crHSplit</dt>
      <dd>TCursor(-14)</dd>
      <dt>crVSplit</dt>
      <dd>TCursor(-15)</dd>
      </dl>
      <p><b>Other Cursors</b></p>
      <dl>
      <dt>crUpArrow</dt>
      <dd>TCursor(-10)</dd>
      <dt>crHourGlass</dt>
      <dd>TCursor(-11) - busy</dd>
      <dt>crSQLWait</dt>
      <dd>TCursor(-17)</dd>
      <dt>crAppStart</dt>
      <dd>TCursor(-19)</dd>
      <dt>crHelp</dt>
      <dd>TCursor(-20)</dd>
      <dt>crHandPoint</dt>
      <dd>TCursor(-21)</dd>
      </dl>
      </descr>
      <seealso/>
      </element>

      <element name="crHigh">
      <short/>
      </element>
      <element name="crDefault">
      <short/>
      </element>
      <element name="crNone">
      <short/>
      </element>
      <element name="crArrow">
      <short/>
      </element>
      <element name="crCross">
      <short/>
      </element>
      <element name="crIBeam">
      <short/>
      </element>
      <element name="crSize">
      <short/>
      </element>
      <element name="crSizeNESW">
      <short/>
      </element>
      <element name="crSizeNS">
      <short/>
      </element>
      <element name="crSizeNWSE">
      <short/>
      </element>
      <element name="crSizeWE">
      <short/>
      </element>
      <element name="crSizeNW">
      <short/>
      </element>
      <element name="crSizeN">
      <short/>
      </element>
      <element name="crSizeNE">
      <short/>
      </element>
      <element name="crSizeW">
      <short/>
      </element>
      <element name="crSizeE">
      <short/>
      </element>
      <element name="crSizeSW">
      <short/>
      </element>
      <element name="crSizeS">
      <short/>
      </element>
      <element name="crSizeSE">
      <short/>
      </element>
      <element name="crUpArrow">
      <short/>
      </element>
      <element name="crHourGlass">
      <short/>
      </element>
      <element name="crDrag">
      <short/>
      </element>
      <element name="crNoDrop">
      <short/>
      </element>
      <element name="crHSplit">
      <short/>
      </element>
      <element name="crVSplit">
      <short/>
      </element>
      <element name="crMultiDrag">
      <short/>
      </element>
      <element name="crSQLWait">
      <short/>
      </element>
      <element name="crNo">
      <short/>
      </element>
      <element name="crAppStart">
      <short/>
      </element>
      <element name="crHelp">
      <short/>
      </element>
      <element name="crHandPoint">
      <short/>
      </element>
      <element name="crSizeAll">
      <short/>
      </element>
      <element name="crLow">
      <short/>
      </element>

      <!-- font types and styles -->
      <element name="LF_FULLFACESIZE">
      <short>
        Maximum number of characters allowed in a font typeface name.
      </short>
      </element>
      <element name="LF_FACESIZE">
      <short>
        Maximum number of characters allowed in font style and script names.
      </short>
      </element>

      <element name="TFontPitch">
      <short>
        Represents values use to describe the pitch or inter-letter spacing 
        used in a typeface.
      </short>
      <descr>
        <p>
          Used to implement the Pitch member in TFontData and the Pitch 
          property in TFont.
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="TFontPitch.fpDefault">
      <short>Font uses the default spacing defined for the typeface.</short>
      </element>
      <element name="TFontPitch.fpVariable">
      <short>Font uses variable pitch (or proportional spacing).</short>
      </element>
      <element name="TFontPitch.fpFixed">
      <short>Font uses fixed pitch (or mono-spacing).</short>
      </element>

      <element name="TFontName">
      <short>
        The type used to represent font names.
      </short>
      <descr>
        <p>
          <var>TFontName</var> is an alias for the <var>String</var> type.
        </p>
      </descr>
      <seealso/>
      </element>

      <element name="TFontDataName">
      <short>
        String type used to represent a typeface name for a font. Maximum 
        length is LF_FACESIZE-1.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TFontStyle">
      <short>
        Represents styles or variants which can be applied to the typeface in a 
        font.
      </short>
      <descr>
        <p>
          <var>TFontStyle</var> is an enumerated type with values used to 
          represent styles or variants for a typeface. Value(s) from TFontStyle 
          are stored in the TFontStyles and TFontStylesBase set types, and 
          used to implement both the Style member in TFontData and the Style 
          property in TFont.
        </p>
      </descr>
      <seealso>
        <link id="TFontStyles"/>
        <link id="TFontStylesBase"/>
      </seealso>
      </element>
      <element name="TFontStyle.fsBold">
      <short>Represents the Bold font style.</short>
      </element>
      <element name="TFontStyle.fsItalic">
      <short>Represents the Italic font variant.</short>
      </element>
      <element name="TFontStyle.fsUnderline">
      <short>Represents the Underline font decoration.</short>
      </element>
      <element name="TFontStyle.fsStrikeOut">
      <short>Represents the Strike Out font decoration.</short>
      </element>

      <element name="TFontStyles">
      <short>
        Set type used to store values from the TFontStyle enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TFontStyle"/>
      </seealso>
      </element>

      <element name="TFontStylesBase">
      <short>
        Set type used to store values from the TFontStyle enumeration.
      </short>
      <descr>
        <p>
          TFontStylesBase is the type used to implement the Style members in 
          TFontData and TFont.
        </p>
      </descr>
      <seealso/>
      </element>

      <element name="TFontCharSet">
      <short>
        Represents a font character set as a numeric value.
      </short>
      <descr>
        <p>
          <var>TFontCharSet</var> is a range type with values representing font 
          character sets. TFontCharSet is limited to integer values in the 
          range <b>0..255</b>, and correspond to the character set identifiers 
          as used in the Win32 GDI LogFont structure. For other platforms, or 
          widgetsets, the values used refer to constants defined in the 
          widgetset interface.
        </p>
        <p>
          <var>TFontCharSet</var> is the type used to implement the CharSet  
          member in TFontData and TFont.
        </p>
      </descr>
      <seealso/>
      </element>

      <element name="TFontQuality">
      <short>
        Represents available output quality settings used in a font.
      </short>
      <descr>
        <p>
          <var>TFontQuality</var> is an enumerated type with values that 
          represent the output quality for fonts. Values in the enumeration 
          control how carefully font attributes are applied to output using a 
          given font.
        </p>
        <remark>
          There are situations where an enumeration value may not produce the 
          desired result. ClearType and ClearTypeNatural anti-aliasing 
          algorithms are oriented to display usage. They cannot be applied to 
          printed output in general. They are ignored for fonts that are not 
          TrueType or OpenType fonts with TrueType outlines. Postscript Type 1 
          fonts, and Postscript OpenType fonts without TrueType outlines, do 
          not use ClearType anti-aliasing. Bitmap, vector, and device fonts 
          cannot use ClearType anti-aliasing. Fonts which contain embedded 
          bitmaps, like most East Asian fonts, do not use ClearType 
          anti-aliasing.
        </remark>
        <p>
          TFontQuality is the type used to implement the Quality           
          members in TFontData and TFont.
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="TFontQuality.fqDefault">
      <short>
        Default font quality; used when appearance is not important.
      </short>
      </element>
      <element name="TFontQuality.fqDraft">
      <short>
        Prefer other font features (size, style) over output quality. 
        Appearance of the font is less important than when fqProof is used. 
        Generally offers lower quality than fqProof or fqDefault.
      </short>
      </element>
      <element name="TFontQuality.fqProof">
      <short>
        Prefer output quality over other font features (like size, style). Font 
        quality is more important than exactly reproducing the size or style 
        for the font.
      </short>
      </element>
      <element name="TFontQuality.fqNonAntialiased">
      <short>Disables font anti-aliasing.</short>
      </element>
      <element name="TFontQuality.fqAntialiased">
      <short>
        Enables font anti-aliasing. The font is always anti-aliased when 
        supported, and the font size is not too small or too large.
      </short>
      </element>
      <element name="TFontQuality.fqCleartype">
      <short>Use ClearType font anti-aliasing when available.</short>
      </element>
      <element name="TFontQuality.fqCleartypeNatural">
      <short>Use Clear Type Natural font anti-aliasing when available.</short>
      </element>

      <!-- Printers -->
      <element name="TPrinterOrientation">
      <short>
        Represents orientations available for a printer device.
      </short>
      <descr>
        <p>
          <var>TPrinterOrientation</var> is an enumerated type with values that 
          represent orientations used for print devices and their canvases. 
          TPrinterOrientation is the type used to implement the Orientation 
          properties in TPrinter and TPrinterCanvas.
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="TPrinterOrientation.poPortrait">
      <short>
        Orients the printer output with the long edge running from the top to 
        the bottom of the page.
      </short>
      </element>
      <element name="TPrinterOrientation.poLandscape">
      <short>
        Orients the printer output with the long edge running from the left to 
        the right of the page.
      </short>
      </element>
      <element name="TPrinterOrientation.poReverseLandscape">
      <short>
        Output uses Landscape orientation with coordinates rotated 180 degrees.
      </short>
      </element>
      <element name="TPrinterOrientation.poReversePortrait">
      <short>
        Output uses Portrait orientation with coordinates rotated 180 degrees.
      </short>
      </element>

      <element name="TPrinterOrientations">
      <short>
        Set type used to store values from the TPrinterOrientation enumeration.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TPrinterCapability">
      <short>
        Represents feature capabilities which may be supported for a given 
        printer device.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TPrinterCapability.pcCopies">
      <short>
        Allows multiple copies to be generated during printing.
      </short>
      </element>
      <element name="TPrinterCapability.pcOrientation">
      <short>
        Allows page orientation to be changed during printing.
      </short>
      </element>
      <element name="TPrinterCapability.pcCollation">
      <short>
        Supports collation of printed pages when multiple copies are supported 
        and enabled.
      </short>
      </element>

      <element name="TPrinterCapabilities">
      <short>
        Set type used to store feature capabilities enabled for a given printer 
        device.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TPrinterState">
      <short>
        Contains state values for the handle used for a printer device.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TPrinterState.psNoHandle">
      <short>
        Indicates that neither an information context nor a device context 
        handle has been allocated for a printer.
      </short>
      </element>
      <element name="TPrinterState.psHandleIC">
      <short>
        Indicates a handle for a device information context has been allocated 
        for a printer.
      </short>
      </element>
      <element name="TPrinterState.psHandleDC">
      <short>
        Indicates a handle for a device context has been allocated for a 
        printer.
      </short>
      </element>

      <element name="TPrinterStates">
      <short>
        Set type used to store values from the TPrinterState enumeration.
      </short>
      <descr/>
      <seealso/>
      </element>

      <!-- Gestures -->
      <!-- standard vcl gestures -->
      <element name="sgiNoGesture">
      <short/>
      </element>
      <element name="sgiLeft">
      <short/>
      </element>
      <element name="sgiRight">
      <short/>
      </element>
      <element name="sgiUp">
      <short/>
      </element>
      <element name="sgiDown">
      <short/>
      </element>
      <element name="sgiUpLeft">
      <short/>
      </element>
      <element name="sgiUpRight">
      <short/>
      </element>
      <element name="sgiDownLeft">
      <short/>
      </element>
      <element name="sgiDownRight">
      <short/>
      </element>
      <element name="sgiLeftUp">
      <short/>
      </element>
      <element name="sgiLeftDown">
      <short/>
      </element>
      <element name="sgiRightUp">
      <short/>
      </element>
      <element name="sgiRightDown">
      <short/>
      </element>
      <element name="sgiUpDown">
      <short/>
      </element>
      <element name="sgiDownUp">
      <short/>
      </element>
      <element name="sgiLeftRight">
      <short/>
      </element>
      <element name="sgiRightLeft">
      <short/>
      </element>
      <element name="sgiUpLeftLong">
      <short/>
      </element>
      <element name="sgiUpRightLong">
      <short/>
      </element>
      <element name="sgiDownLeftLong">
      <short/>
      </element>
      <element name="sgiDownRightLong">
      <short/>
      </element>
      <element name="sgiScratchout">
      <short/>
      </element>
      <element name="sgiTriangle">
      <short/>
      </element>
      <element name="sgiSquare">
      <short/>
      </element>
      <element name="sgiCheck">
      <short/>
      </element>
      <element name="sgiCurlicue">
      <short/>
      </element>
      <element name="sgiDoubleCurlicue">
      <short/>
      </element>
      <element name="sgiCircle">
      <short/>
      </element>
      <element name="sgiDoubleCircle">
      <short/>
      </element>
      <element name="sgiSemiCircleLeft">
      <short/>
      </element>
      <element name="sgiSemiCircleRight">
      <short/>
      </element>
      <element name="sgiChevronUp">
      <short/>
      </element>
      <element name="sgiChevronDown">
      <short/>
      </element>
      <element name="sgiChevronLeft">
      <short/>
      </element>
      <element name="sgiChevronRight">
      <short/>
      </element>
      <element name="sgiFirst">
      <short/>
      </element>
      <element name="sgiLast">
      <short/>
      </element>

      <!-- ID range for custom gestures  -->
      <element name="cgiFirst">
      <short/>
      </element>
      <element name="cgiLast">
      <short/>
      </element>

      <!-- Range for registered custom gestures -->
      <element name="rgiFirst">
      <short/>
      </element>
      <element name="rgiLast">
      <short/>
      </element>

      <!-- Interactive gesture ID range. -->
      <element name="igiFirst">
      <short/>
      </element>
      <element name="igiLast">
      <short/>
      </element>

      <!-- Interactive gesture IDs -->
      <element name="igiBegin">
      <short/>
      </element>
      <element name="igiEnd">
      <short/>
      </element>
      <element name="igiZoom">
      <short/>
      </element>
      <element name="igiPan">
      <short/>
      </element>
      <element name="igiRotate">
      <short/>
      </element>
      <element name="igiTwoFingerTap">
      <short/>
      </element>
      <element name="igiPressAndTap">
      <short/>
      </element>
      <element name="igiLongTap">
      <short/>
      </element>
      <element name="igiDoubleTap">
      <short/>
      </element>

      <!-- Edit controls -->
      <element name="TEditCharCase">
      <short>
        Indicates whether case conversion is applied to a value entered in an 
        edit control.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TEditCharCase.ecNormal">
      <short>
        No case conversion is applied.
      </short>
      </element>
      <element name="TEditCharCase.ecUpperCase">
      <short>
        Converts all characters entered in an edit control to uppercase.
      </short>
      </element>
      <element name="TEditCharCase.ecLowerCase">
      <short>
        Converts all characters entered in an edit control to lowercase.
      </short>
      </element>

      <!-- Forms -->
      <element name="TWindowState">
      <short>
        Indicates the state for a window or form.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TWindowState.wsNormal">
      <short>
        Window is in its normal state; i. e. neither minimized nor maximized, 
        and not full screen.
      </short>
      </element>
      <element name="TWindowState.wsMinimized">
      <short>
        Window is in the minimized state.
      </short>
      </element>
      <element name="TWindowState.wsMaximized">
      <short>
        Window is in the maximized state.
      </short>
      </element>
      <element name="TWindowState.wsFullScreen">
      <short>
        Window is in full screen mode where title bars, border icons, and 
        window frames are not visible. wsFullScreen is platform-dependent; 
        Windows treats wsFullScreen the same as wsMaximized.
      </short>
      </element>

      <element name="TWindowStates">
      <short>
        Set type used to store values from the TWindowState enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TWindowState"/>        
      </seealso>
      </element>

      <element name="TBorderIcon">
      <short>
        Represents visual elements enabled on a window title bar; depends on window manager support.
      </short>      
      <descr/>
      <seealso/>
      </element>
      <element name="TBorderIcon.biSystemMenu">
      <short>
        Displays a system menu on window managers where it is supported.
      </short>
      </element>
      <element name="TBorderIcon.biMinimize">
      <short>
        Displays a minimize button.
      </short>
      </element>
      <element name="TBorderIcon.biMaximize">
      <short>
        Displays a maximize button.
      </short>
      </element>
      <element name="TBorderIcon.biHelp">
      <short>
        Displays a help button used to get help for controls on a form.
      </short>
      </element>

      <element name="TBorderIcons">
      <short>
        Set type used to store values from the TBorderIcon enumeration.
      </short>
      <descr/>
      <seealso/>
      </element>

      <!-- Dialogs -->
      <element name="TOpenOption">
      <short>
        Represents options available in a open dialog (TOpenDialog).
      </short>
      <descr>
        <p>
        <var>TOpenOption</var> contains the options which can be used 
        in an Open dialog. Values from the enumeration are stored in the 
        <var>TOpenOptions</var> set type which is used to implement the Options 
        property in TOpenDialog. When an option value is included in the set, 
        it is enabled during execution of the dialog. The values are applied to 
        a native dialog before it is executed.
        </p>
        <p>
        Please note that some option values may not be available for a given 
        platform: ofNoDereferenceLinks, ofOldStyleDialog, ofViewDetail, and 
        ofAutoPreview.
        </p>
      </descr>
      <seealso>
        <link id="TOpenOptions"/>
      </seealso>
      </element>
      <element name="TOpenOption.ofReadOnly">
      <short>
        Includes read-only files.
      </short>
      </element>
      <element name="TOpenOption.ofOverwritePrompt">
      <short>
        If the selected file exists, a message is displayed if the file will be 
        overwritten.
      </short>
      </element>
      <element name="TOpenOption.ofHideReadOnly">
      <short>Hides read-only files.</short>
      </element>
      <element name="TOpenOption.ofNoChangeDir">
      <short>Prevents changing the current directory.</short>
      </element>
      <element name="TOpenOption.ofShowHelp">
      <short>Show a help button on the dialog.</short>
      </element>
      <element name="TOpenOption.ofNoValidate">
      <short>
        Disables file name validation using OFN_NOVALIDATE on the Windows 
        platform.
      </short>
      </element>
      <element name="TOpenOption.ofAllowMultiSelect">
      <short>Enables multiple file name selection using a dialog.</short>
      </element>
      <element name="TOpenOption.ofExtensionDifferent">
      <short>
        Allows a file name with an extension which does not match the filters 
        or default extension in a file dialog.
      </short>
      </element>
      <element name="TOpenOption.ofPathMustExist">
      <short>Shows an error message if the selected path does not exist.</short>
      </element>
      <element name="TOpenOption.ofFileMustExist">
      <short>
        Shows an error message if the selected/entered file name does not 
        exist.
      </short>
      </element>
      <element name="TOpenOption.ofCreatePrompt">
      <short>
        Enables a verification prompt when a file or directory needs to be 
        created.
      </short>
      </element>
      <element name="TOpenOption.ofShareAware">
      <short>
        Includes the OFN_SHAREAWARE flag on the Windows platform.
      </short>
      </element>
      <element name="TOpenOption.ofNoReadOnlyReturn">
      <short>Prevents returning file names that are read-only.</short>
      </element>
      <element name="TOpenOption.ofNoTestFileCreate">
      <short>
        Includes the OFN_NOTESTFILECREATE flag on the Windows platform.
      </short>
      </element>
      <element name="TOpenOption.ofNoNetworkButton">
      <short>
        Disables and hides the Network button on the Windows platform.
      </short>
      </element>
      <element name="TOpenOption.ofNoLongNames">
      <short>
        Disables long file names on the Windows platform. Used in classic-style 
        dialogs to force use of file names using the 8.3 format. Explorer-style 
        dialogs ignore this flag and always display long file names.
      </short>
      </element>
      <element name="TOpenOption.ofOldStyleDialog">
      <short>
        Prevents use of OFN_EXPLORER and dependent flags in dialogs on the 
        Windows platform.
      </short>
      </element>
      <element name="TOpenOption.ofNoDereferenceLinks">
      <short>
        Do not resolve links while a dialog is shown (for Windows only, see 
        OFN_NODEREFERENCELINKS).
      </short>
      </element>

      <!-- TODO: TOpenOption.ofNoResolveLinks is missing -->

      <element name="TOpenOption.ofEnableIncludeNotify">
      <short>
        Not currently in use.
      </short>
      </element>
      <element name="TOpenOption.ofEnableSizing">
      <short>Dialog can be resized using the mouse.</short>
      </element>
      <element name="TOpenOption.ofDontAddToRecent">
      <short>Prevents adding selection(s) to the history list.</short>
      </element>
      <element name="TOpenOption.ofForceShowHidden">
      <short>Causes hidden files to be displayed.</short>
      </element>

      <!-- 
        TODO: TOpenOption.ofViewDetail, TOpenOption.ofAutoPreview are missing.
      -->

      <element name="TOpenOptions">
      <short>
        Set type used to store values from the TOpenOption enumeration.
      </short>
      <descr>
        <p>
          <var>TOpenOptions</var> is a set type used to store 0 (zero) or more values from the <var>TOpenOption</var> enumeration. TOpenOptions is the type used to implement the Options property in TOpenDialog. When a value s included in the set, it is enabled during execution of the dialog.
        </p>
      </descr>
      <seealso>
        <link id="TOpenOption"/>
      </seealso>
      </element>

      <element name="TOpenOptionEx">
      <short>
        Identifies extended options available in a open dialog.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TOpenOptionEx.ofExNoPlacesBar">
      <short>
        Disables the pinned places bar on the dialog.
      </short>
      </element>

      <element name="TOpenOptionsEx">
      <short>
        Set type used to store values from the TOpenOptionEx enumeration.
      </short>
      <descr/>
      <seealso/>
      </element>

      <element name="TDialogType">
      <short/>
      <descr/>
      <notes>
      <note>Not used in RTL, FCL, LCL, or LazUtils. Usage?</note>
      </notes>
      <seealso/>
      </element>
      <element name="TDialogType.Standard">
      <short/>
      </element>
      <element name="TDialogType.Directory">
      <short/>
      </element>

      <element name="TPrintRange">
      <short>
        Enumerated type which represents page ranges used in a print dialog.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TPrintRange.prAllPages">
      <short>Print all pages.</short>
      </element>
      <element name="TPrintRange.prSelection">
      <short>Print the selected range of pages.</short>
      </element>
      <element name="TPrintRange.prPageNums">
      <short>Print the selection of individual pages.</short>
      </element>

      <!-- 
      TODO: TPrintRange.prCurrentPage is missing. 
      Used on CUPS and QT dialogs.
      -->

      <element name="TPrintDialogOption">
      <short>Enumerated type with available options for a print dialog.</short>
      <descr/>
      <seealso>
        <link id="TPrintDialogOptions"/>
      </seealso>
      </element>
      <element name="TPrintDialogOption.poPrintToFile">
      <short>Enables and checks the print to a file check box.</short>
      </element>
      <element name="TPrintDialogOption.poPageNums">
      <short>Selects the Pages radio button in the dialog.</short>
      </element>
      <element name="TPrintDialogOption.poSelection">
      <short>Selects the Selection radio button in a print dialog.</short>
      </element>
      <element name="TPrintDialogOption.poWarning">
      <short>Displays a warning message for a print error.</short>
      </element>
      <element name="TPrintDialogOption.poHelp">
      <short>Displays a Help button in a print dialog.</short>
      </element>
      <element name="TPrintDialogOption.poDisablePrintToFile">
      <short>Disables the print to file check box in a print dialog.</short>
      </element>

      <element name="TPrintDialogOptions">
      <short>
        Set type used for the options in a print dialog.
      </short>
      <descr/>
      <seealso>
        <link id="TPrintDialogOption"/>        
      </seealso>
      </element>

      <!-- printerdlgs -->
      <element name="TPageSetupDialogOption">
      <short>
        Represents the options available for a page setup dialog.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TPageSetupDialogOption.psoDefaultMinMargins">
      <short>
        Causes the default minimum size to be used in the Left, Top, Right and Bottom page margins (.4in or 4mm).
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoDisableMargins">
      <short>
        Disables margin settings on a page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoDisableOrientation">
      <short>
        Disables page orientation settings om a page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoDisablePagePainting">
      <short>
        Disables the Current Page print range on a page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoDisablePaper">
      <short>
        Disables paper size selection on a page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoDisablePrinter">
      <short>
        Disables changing the selected printer device on a page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoMargins">
      <short>
        Enables Left, Top, Right, and Bottom margins scaled to the unit measure 
        on the page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoMinMargins">
      <short>
        Enables minimum margin sizes for the Left, Top, Right, and bottom 
        margins scaled to the unit measure on the page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoShowHelp">
      <short>
        Enables the Help button on a page setup dialog.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoWarning">
      <short>
        Displays a warning message if a default printer has not been selected 
        when the page setup dialog is executed.
      </short>
      </element>
      <element name="TPageSetupDialogOption.psoNoNetworkButton">
      <short>
        Removes the Network Printers button on the page setup dialog (Windows).
      </short>
      </element>

      <element name="TPageSetupDialogOptions">
      <short>
        Set type used to store values from the TPageSetupDialogOption 
        enumeration.
      </short>
      <descr/>
      <seealso>
        <link id="TPageSetupDialogOption"/>        
      </seealso>
      </element>

      <element name="TPageMeasureUnits">
      <short>
        Represents the units of measure that can be used on a page setup dialog.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="TPageMeasureUnits.pmDefault">
      <short>
        Causes the default unit of measure to be used. On Windows this causes 
        margins and sizes to be measured in 1/100ths of a mm or 1/1000ths of an 
        inch.
      </short>
      </element>
      <element name="TPageMeasureUnits.pmMillimeters">
      <short>
        Causes 1/100th of a millimeter to be used for values in the margin 
        settings.
      </short>
      </element>
      <element name="TPageMeasureUnits.pmInches">
      <short>
        Causes 1/1000th of an inch to be used for values in the margin 
        settings.
      </short>
      </element>

      <!-- Calendar -->
      <element name="TCalDayOfWeek">
      <short>
        Represents the days of the week used in calendar or date controls.
      </short>
      <descr>
        <p>
          <var>TCalDayOfWeek</var> is an enumerated type with values which 
          represent the day used as the first day of the week in 
          <var>TCustomCalendar</var> and descendent controls.
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="TCalDayOfWeek.dowMonday">
      <short>Represents Monday.</short>
      </element>
      <element name="TCalDayOfWeek.dowTuesday">
      <short>Represents Tuesday.</short>
      </element>
      <element name="TCalDayOfWeek.dowWednesday">
      <short>Represents Wednesday.</short>
      </element>
      <element name="TCalDayOfWeek.dowThursday">
      <short>Represents Thursday.</short>
      </element>
      <element name="TCalDayOfWeek.dowFriday">
      <short>Represents Friday.</short>
      </element>
      <element name="TCalDayOfWeek.dowSaturday">
      <short>Represents Saturday.</short>
      </element>
      <element name="TCalDayOfWeek.dowSunday">
      <short>Represents Sunday.</short>
      </element>
      <element name="TCalDayOfWeek.dowLocaleDefault">
      <short>
        Not available in the Lazarus LCL which uses dowDefault.
      </short>
      </element>

      <element name="IsPositiveResult">
      <short>
        Indicates whether the specified modal result value is a positive result 
        where a dialog has been completed successfully.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="IsPositiveResult.Result">
      <short>
        <b>True</b> if the specified modal result is one the values: 
         mrOk, mrYes, mrAll, mrYesToAll, or mrContinue.
      </short>
      </element>
      <element name="IsPositiveResult.AModalResult">
      <short>
        Modal result value examined in the routine.
      </short>
      </element>

      <element name="IsNegativeResult">
      <short>
        Indicates whether the specified modal result value is a negative  
        result where a dialog has <b>not</b> been completed successfully.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="IsNegativeResult.Result">
      <short>
        <b>True</b> if the specified modal result is one of the values:
        mrNo, mrNoToAll, or mrTryAgain.
      </short>
      </element>
      <element name="IsNegativeResult.AModalResult">
      <short>
        Modal result value examined in the routine.
      </short>
      </element>

      <element name="IsAbortResult">
      <short>
        Indicates whether the specified modal result value is one of the 
        values returned when a dialog has been cancelled.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="IsAbortResult.Result">
      <short>
        <b>True</b> if the specified modal result is one of the values:
        mrCancel or mrAbort.
      </short>
      </element>
      <element name="IsAbortResult.AModalResult">
      <short>
        Modal result value examined in the routine.
      </short>
      </element>

      <element name="IsAnAllResult">
      <short>
        Indicates whether the specified modal result value is one of the 
        values which include the "To All" qualifier.
      </short>
      <descr/>
      <seealso/>
      </element>
      <element name="IsAnAllResult.Result">
      <short>
        <b>True</b> if the specified modal result is one of the values:
        mrAll, mrNoToAll, or mrYesToAll.
      </short>
      </element>
      <element name="IsAnAllResult.AModalResult">
      <short>
        Modal result value examined in the routine.
      </short>
      </element>

      <element name="StripAllFromResult">
      <short>
        Converts a modal result value for one of the "To All" values to its 
        singular equivalent.
      </short>
      <descr>
        <p>
          <var>StripAllFromResult</var> is a <var>TModalResult</var> function 
          used to convert the modal result value in <var>aModalResult</var> to 
          its singular equivalent. 
        </p>
        <p>
          For example:
        </p>
        <table>
          <tr>
            <td><b>Modal Result</b></td>
            <td><b>Return Value</b></td>
          </tr>
          <tr>
            <td>mrAll</td>
            <td>mrOk</td>
          </tr>
          <tr>
            <td>mrNoToAll</td>
            <td>mrNo</td>
          </tr>
          <tr>
            <td>mrYesToAll</td>
            <td>mrYes</td>
          </tr>
        </table>
        <p>
          Other values in aModalResult are not converted.
        </p>
      </descr>
      <seealso/>
      </element>
      <element name="StripAllFromResult.Result">
      <short>
        Modal result value after conversion to its singular equivalent.
      </short>
      </element>
      <element name="StripAllFromResult.AModalResult">
      <short>
        Modal result value converted in the routine.
      </short>
      </element>

    </module>
  </package>
  <!-- rtl.system.uitypes -->
</fpdoc-descriptions>
