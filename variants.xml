<?xml version="1.0" encoding="ISO-8859-1"?>
<fpdoc-descriptions>
<package name="rtl">

<!--
  ====================================================================
    Variants
  ====================================================================
-->

<module name="Variants">
<short>Support unit for variants.</short>
<descr>
The <var>Variants</var> unit contains several support routines for working with variants.
It also includes the necessary support for reading and writing properties based on RTTI.
</descr>

<!-- uses unit Visibility: default -->
<element name="sysutils">
<short>Various conversion routines are used</short>
</element>

<!-- uses unit Visibility: default -->
<element name="sysconst">
<short>Various FPC error constants</short>
</element>

<!-- uses unit Visibility: default -->
<element name="rtlconsts">
<short>various Delphi compatible error string constants</short>
</element>

<!-- uses unit Visibility: default -->
<element name="typinfo">
<short>RTTI support</short>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantParamNotFoundError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantParamNotFoundError">
<short>Variant parameter not found exception class</short>
<descr>
<var>EVariantParamNotFoundError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_PARAMNOTFOUND</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantInvalidOpError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantInvalidOpError">
<short>Variant invalid operation exception class</short>
<descr>
<var>EVariantInvalidOpError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_EXCEPTION</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantTypeCastError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantTypeCastError">
<short>Variant invalid type cast exception class</short>
<descr>
<var>EVariantTypeCastError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_TYPEMISMATCH</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantOverflowError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantOverflowError">
<short>Variant invalid type cast exception class</short>
<descr>
<var>EVariantOverflowError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_OVERFLOW</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantInvalidArgError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantInvalidArgError">
<short>Variant invalid argument exception class</short>
<descr>
<var>EVariantInvalidArgError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_INVALIDARG</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantBadVarTypeError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantBadVarTypeError">
<short>Variant invalid type exception class</short>
<descr>
<var>EVariantBadVarTypeError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_BADVARTYPE</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantBadIndexError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantBadIndexError">
<short>Variant invalid index exception class</short>
<descr>
<var>EVariantBadIndexError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_BADINDEX</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantArrayLockedError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantArrayLockedError">
<short>Variant array locked exception class</short>
<descr>
<var>EVariantArrayLockedError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_ARRAYISLOCKED</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantNotAnArrayError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantNotAnArrayError">
<short>Variant is not an array exception class</short>
<descr>
<var>EVariantNotAnArrayError</var> is defined for Delpi compatibility. It is not used in the Free Pascal runtime.
</descr>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantArrayCreateError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantArrayCreateError">
<short>Variant array locked exception class</short>
<descr>
  <var>EVariantArrayCreateError</var> is defined for Delpi compatibility. It is not used in the Free Pascal runtime.
</descr>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantNotImplError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantNotImplError">
<short>Variant functionality not implemented exception class</short>
<descr>
<var>EVariantNotImplError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_NOTIMPL</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantOutOfMemoryError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantOutOfMemoryError">
<short>Variant out of memory exception class</short>
<descr>
<var>EVariantOutOfMemoryError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_OUTOFMEMORY</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantUnexpectedError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantUnexpectedError">
<short>Variant unexpected error exception class</short>
<descr>
<var>EVariantUnexpectedError</var> is the exception raised by
<link id="VarResultCheck"/> in case of a <var>VAR_UNEXPECTED</var> result.
</descr>
<seealso>
<link id="VarResultCheck"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantDispatchError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantDispatchError">
<short>Variant dispatch error exception class</short>
<descr>
<var>EVariantDispatchError</var> is an exception raised by custom variant types
<link id="TCustomVariantType"/> to indicate errors in dispatch invoke.
</descr>
<seealso>
<link id="TCustomVariantType"/>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantRangeCheckError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantRangeCheckError">
<short>Variant range check error class</short>
<descr>
<var>EVariantRangeCheckError</var> is defined for Delphi compatibility, but is not used in the FPC run time.
</descr>
</element>

<!--
  ********************************************************************
    #rtl.Variants.EVariantInvalidNullOpError
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="EVariantInvalidNullOpError">
<short>Variant invalid null operation error</short>
<descr>
<var>EVariantInvalidNullOpError</var> is defined for Delphi compatibility, but is not used in the FPC run time.
</descr>
</element>

<!-- enumeration type Visibility: default -->
<element name="TVariantRelationship">
<short>Enumerated type to describe comparison operations between variants</short>
<descr>
<p>
<var>TVariantRelationship</var> is used by <link id="VarCompareValue"/> to indicate the type of comparison operation it must perform.
It has the following values:
</p>
<dl>
<dt>vrEqual</dt><dd><printshort id="TVariantRelationship.vrEqual"/></dd>
<dt>vrLessThan</dt><dd><printshort id="TVariantRelationship.vrLessThan"/></dd>
<dt>vrGreaterThan</dt><dd><printshort id="TVariantRelationship.vrGreaterThan"/></dd>
<dt>vrEqual</dt><dd><printshort id="TVariantRelationship.vrEqual"/></dd>
<dt>vrEqual</dt><dd><printshort id="TVariantRelationship.vrEqual"/></dd>
</dl>
</descr>
<seealso>
<link id="VarCompareValue"/>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVariantRelationship.vrEqual">
<short>Are the 2 variants equal</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVariantRelationship.vrLessThan">
<short>Is the first variant (strictly) less than the second</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVariantRelationship.vrGreaterThan">
<short>Is the first variant (strictly) greater than the second</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVariantRelationship.vrNotEqual">
<short>Are the 2 variants unequal</short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TNullCompareRule">
<short>Enumeration describing how to handle Null values when comparing variants.</short>
<descr>
<p>
<var>TNullCompareRule</var> is the type for the <link id="NullEqualityRule"/> and <link id="NullMagnitudeRule"/> variables.
It can have the following values:
</p>
<dl>
<dt>ncrError</dt><dd><printshort id="TNullCompareRule.ncrError"/></dd>
<dt>ncrStrict</dt><dd><printshort id="TNullCompareRule.ncrStrict"/></dd>
<dt>ncrLoose</dt><dd><printshort id="TNullCompareRule.ncrLoose"/></dd>
</dl>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNullCompareRule.ncrError">
<short>Raise an error when one of the values is Null.</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNullCompareRule.ncrStrict">
<short>Act as if the comparison is false</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNullCompareRule.ncrLoose">
<short>Attempt to compare anyway</short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TBooleanToStringRule">
<short>Enumeration describing how to convert boolean values to string values.</short>
<descr>
<var>TBooleanToStringRule</var> describes how boolean values are converted to string values.
It is defined for Delphi compatibility, but is not used in the FPC runtime.
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBooleanToStringRule.bsrAsIs">
<short>Leave casing as is</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBooleanToStringRule.bsrLower">
<short>Convert to lowercase</short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBooleanToStringRule.bsrUpper">
<short>Convert to uppercase</short>
</element>

<!-- constant Visibility: default -->
<element name="OrdinalVarTypes">
<short>Constant describing which variant types are considered ordinals</short>
<descr>
<var>OrdinalVarTypes</var> is used in <link id="VarIsOrdinal"/> to decide which variant types are considered ordinals.
</descr>
<seealso>
<link id="VarIsOrdinal"/>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="FloatVarTypes">
<short>Constant describing which variant types are considered floating point types</short>
<descr>
  <var>FloatlVarTypes</var> is used in <link id="VarIsFloat"/> to decide which variant types are considered ordinals.
</descr>
<seealso>
<link id="VarIsFloat"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarType">
<short>Return the type of a variant.</short>
<descr>
<var>VarType</var> returns the type of the variant <var>V</var>. (it returns the internal type field of the variant structure)
</descr>
<seealso>
<link id="VarTypeDeRef"/>
<link id="VarIsType"/>
<link id="VarAsType"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarTypeDeRef">
<short>Returns the resolved type of a variant.</short>
<descr>
<var>VarTypeDeRef</var> will resolve the final type of the variant <var>V</var>:
if <var>V</var> is a reference to another variant, the function will return the type of the referenced variant, recursing as much as needed till a non-variant type is encountred.
</descr>
<seealso>
<link id="VarType"/>
<link id="VarIsType"/>
<link id="VarAsType"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarAsType">
<short>Attempt to cast a variant to another type</short>
<descr>
<var>VarAsType</var> attempts to cast the variant <var>V</var> to a new variant of type <var>aVarType</var> and returns the new variant.
</descr>
<errors>
If the requested type cast is not supported or possible, an <link id="EVariantTypeCastError"/> exception may be raised.
</errors>
<seealso>
<link id="EVariantTypeCastError"/>
<link id="VarIsType"/>
<link id="VarAsType"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsType">
<short>Check if a variant is of certain type</short>
<descr>
<var>VarIsType</var> will return <var>True</var> if the variant <var>V</var> is of type <var>aVarType</var> or is in <var>aVarTypes</var>.
</descr>
<errors>
</errors>
<seealso>
<link id="VarType"/>
<link id="VarAsType"/>
<link id="VarIsByRef"/>
<link id="VarIsNull"/>
<link id="VarIsEmpty"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsByRef">
<short>Check if the variant is a reference to a value.</short>
<descr>
<var>VarIsByRef</var> checks whether the variant <var>V</var> is a reference to a value instead of an actual value.
It returns <var>True</var> if this is the case, <var>False</var> if not.
</descr>
<errors>
</errors>
<seealso>
<link id="VarType"/>
<link id="VarAsType"/>
<link id="VarIsType"/>
<link id="VarIsEmpty"/>
<link id="VarIsNull"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsEmpty">
<short>Check if the variant is empty</short>
<descr>
<var>VarIsEmpty</var> checks whether the variant <var>V</var> is empty (i.e. the type is <var>varEmpty</var>).
</descr>
<seealso>
<link id="VarType"/>
<link id="VarAsType"/>
<link id="VarIsType"/>
<link id="VarIsEmpty"/>
<link id="VarCheckEmpty"/>
<link id="VarIsNull"/>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarCheckEmpty">
<short>Raise exception if a variant is empty.</short>
<descr>
  <var>VarCheckEmpty</var> will raise an <link id="EVariantError"/> exception if the variant <var>V</var>
  is empty (it uses <link id="VarIsEmpty"/> to check this.)
</descr>
<errors>
if the variant is empty an <link id="EVariantError"/> exception is raised.
</errors>
<seealso>
<link id="VarIsEmpty"/>
<link id="VarType"/>
<link id="VarIsNull"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsNull">
<short>Check if a variant is null</short>
<descr>
<var>VarIsNull</var> returns <var>True</var> if the type of the variant
  <var>V</var> is <var>varNull</var>. No dereferencing is done.
</descr>
<errors>
</errors>
<seealso>
<link id="VarIsEmpty"/>
<link id="VarType"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsClear">
<short>Check if a variant is clear</short>
<descr>
<var>VarIsClear</var> returns <var>True</var> if the variant <var>V</var> is empty, or it is a dispatch type with value Nil.
For custom types, the decision is left to the custom type.
</descr>
<seealso>
<link id="VarIsEmpty"/>
<link id="VarIsNull"/>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsCustom">
<short>Check if the variant is a custom value.</short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsOrdinal">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsFloat">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsNumeric">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsStr">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsBool">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToStr">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToStrDef">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToWideStr">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToWideStrDef">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToUnicodeStr">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToUnicodeStrDef">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarToDateTime">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarFromDateTime">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarInRange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarEnsureRange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarSameValue">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarCompareValue">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsEmptyParam">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarClear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="SetClearVarToEmptyParam">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarAsError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarSupports">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarCopyNoInd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayCreate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayOf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayAsPSafeArray">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayDimCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayLowBound">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayHighBound">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayLock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarArrayUnlock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarArrayRef">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarIsArray">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarTypeIsValidArrayType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarTypeIsValidElementType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="DynArrayToVariant">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="DynArrayFromVariant">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="Unassigned">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="Null">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="EmptyParam">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TVarCompareResult">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVarCompareResult.crLessThan">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVarCompareResult.crEqual">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TVarCompareResult.crGreaterThan">
<short></short>
</element>

<!--
  ********************************************************************
    #rtl.Variants.TCustomVariantType
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="TCustomVariantType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomVariantType.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomVariantType.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomVariantType.IsClear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.Cast">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.CastTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.CastToOle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.Clear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.Copy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.BinaryOp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.UnaryOp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomVariantType.CompareOp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomVariantType.Compare">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomVariantType.VarType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "class of" type Visibility: default -->
<element name="TCustomVariantTypeClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- array type Visibility: default -->
<element name="TVarDataArray">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.IVarInvokeable
  ********************************************************************
-->

<!-- interface Visibility: default -->
<element name="IVarInvokeable">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="IVarInvokeable.DoFunction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="IVarInvokeable.DoProcedure">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="IVarInvokeable.GetProperty">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="IVarInvokeable.SetProperty">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.TInvokeableVariantType
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="TInvokeableVariantType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TInvokeableVariantType.DoFunction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TInvokeableVariantType.DoProcedure">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TInvokeableVariantType.GetProperty">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TInvokeableVariantType.SetProperty">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.IVarInstanceReference
  ********************************************************************
-->

<!-- interface Visibility: default -->
<element name="IVarInstanceReference">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="IVarInstanceReference.GetInstance">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!--
  ********************************************************************
    #rtl.Variants.TPublishableVariantType
  ********************************************************************
-->

<!-- class Visibility: default -->
<element name="TPublishableVariantType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TPublishableVariantType.GetProperty">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TPublishableVariantType.SetProperty">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="FindCustomVariantType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TAnyProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TVarDispProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CMaxNumberOfCustomVarTypes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CMinVarType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CMaxVarType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CIncVarType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CFirstUserType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="NullEqualityRule">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="NullMagnitudeRule">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="NullStrictConvert">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="NullAsStringValue">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="PackVarCreation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="OleVariantInt64AsDouble">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="VarDispProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="ClearAnyProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="ChangeAnyProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="RefAnyProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="InvalidCustomVariantType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarCastError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarCastErrorOle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarInvalidOp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarInvalidNullOp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarBadTypeError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarOverflowError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarBadIndexError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarArrayLockedError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarNotImplError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarOutOfMemoryError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarInvalidArgError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarUnexpectedError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarRangeCheckError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarArrayCreateError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="VarResultCheck">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="HandleConversionException">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="VarTypeAsText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="FindVarData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="VarOpAsText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="GetPropValue">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="SetPropValue">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="GetVariantProp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="SetVariantProp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

</module> <!-- Variants -->

</package>
</fpdoc-descriptions>
